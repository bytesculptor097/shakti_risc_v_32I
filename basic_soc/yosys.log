
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33 (git sha1 2584903a060)


-- Running command ` 	read_verilog -lib +/ice40/cells_sim.v; 	read_verilog -sv mkeclass_axi4.v axi4_uart_bridge.v uart_tx_minimal.v bram.v mkeclass.v mkriscv.v mkstage1.v mkstage2.v mkstage3.v mkalu.v mkcsrfile.v mkcsr.v RegFile.v SyncResetA.v SyncReset0.v SyncRegister.v SyncFIFO.v SyncHandshake.v FIFO2.v FIFO1.v FIFO10.v FIFO20.v FIFOL1.v MakeClock.v ClockInverter.v module_decoder_func_32.v module_fn_alu.v uart_tx_8n1.v module_address_valid.v module_chk_interrupt.v module_decode_word32.v; 	hierarchy -top mkeclass_axi4; 	synth_ice40 -top mkeclass_axi4 -json mkeclass_axi4.json ' --

1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: mkeclass_axi4.v
Parsing SystemVerilog input from `mkeclass_axi4.v' to AST representation.
Generating RTLIL representation for module `\mkeclass_axi4'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: axi4_uart_bridge.v
Parsing SystemVerilog input from `axi4_uart_bridge.v' to AST representation.
Generating RTLIL representation for module `\axi4_uart_bridge'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: uart_tx_minimal.v
Parsing SystemVerilog input from `uart_tx_minimal.v' to AST representation.
Generating RTLIL representation for module `\uart_tx_minimal'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: bram.v
Parsing SystemVerilog input from `bram.v' to AST representation.
Generating RTLIL representation for module `\bram'.
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 165 bit. (bram.v:1)
Warning: Literal has a width of 32 bit, but value requires 67 bit. (bram.v:1)
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: mkeclass.v
Parsing SystemVerilog input from `mkeclass.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\mkeclass'.
mkeclass.v:842: Warning: Identifier `\EN_sb_clint_msip_put' is implicitly declared.
mkeclass.v:847: Warning: Identifier `\EN_sb_clint_mtip_put' is implicitly declared.
mkeclass.v:852: Warning: Identifier `\EN_sb_clint_mtime_put' is implicitly declared.
mkeclass.v:861: Warning: Identifier `\EN_io_dump_get' is implicitly declared.
mkeclass.v:1039: Warning: Identifier `\riscv_RDY_memory_response_put' is implicitly declared.
mkeclass.v:1246: Warning: Identifier `\sb_clint_msip_put' is implicitly declared.
mkeclass.v:1247: Warning: Identifier `\sb_clint_mtime_put' is implicitly declared.
mkeclass.v:1248: Warning: Identifier `\sb_clint_mtip_put' is implicitly declared.
Note: Assuming pure combinatorial block at mkeclass.v:1306.3-1313.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass.v:1314.3-1321.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass.v:1322.3-1345.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: mkriscv.v
Parsing SystemVerilog input from `mkriscv.v' to AST representation.
Generating RTLIL representation for module `\mkriscv'.
mkriscv.v:440: Warning: Identifier `\EN_clint_msip' is implicitly declared.
mkriscv.v:445: Warning: Identifier `\EN_clint_mtip' is implicitly declared.
mkriscv.v:450: Warning: Identifier `\EN_clint_mtime' is implicitly declared.
mkriscv.v:455: Warning: Identifier `\EN_ext_interrupt' is implicitly declared.
mkriscv.v:461: Warning: Identifier `\EN_dump_get' is implicitly declared.
mkriscv.v:1031: Warning: Identifier `\clint_msip_intrpt' is implicitly declared.
mkriscv.v:1032: Warning: Identifier `\clint_mtime_c_mtime' is implicitly declared.
mkriscv.v:1033: Warning: Identifier `\clint_mtip_intrpt' is implicitly declared.
mkriscv.v:1034: Warning: Identifier `\ext_interrupt_intrpt' is implicitly declared.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: mkstage1.v
Parsing SystemVerilog input from `mkstage1.v' to AST representation.
Generating RTLIL representation for module `\mkstage1'.
Note: Assuming pure combinatorial block at mkstage1.v:680.3-689.10 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: mkstage2.v
Parsing SystemVerilog input from `mkstage2.v' to AST representation.
Generating RTLIL representation for module `\mkstage2'.
Note: Assuming pure combinatorial block at mkstage2.v:754.3-760.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:821.3-829.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:830.3-857.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:858.3-867.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: mkstage3.v
Parsing SystemVerilog input from `mkstage3.v' to AST representation.
Generating RTLIL representation for module `\mkstage3'.
mkstage3.v:638: Warning: Identifier `\system_instruction_csr_address' is implicitly declared.
mkstage3.v:639: Warning: Identifier `\system_instruction_op1' is implicitly declared.
mkstage3.v:640: Warning: Identifier `\system_instruction_funct3' is implicitly declared.
mkstage3.v:641: Warning: Identifier `\system_instruction' is implicitly declared.
mkstage3.v:642: Warning: Identifier `\RDY_system_instruction' is implicitly declared.
mkstage3.v:645: Warning: Identifier `\take_trap_type_cause' is implicitly declared.
mkstage3.v:646: Warning: Identifier `\take_trap_pc' is implicitly declared.
mkstage3.v:647: Warning: Identifier `\take_trap' is implicitly declared.
mkstage3.v:650: Warning: Identifier `\ext_interrupt_ex_i' is implicitly declared.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: mkalu.v
Parsing SystemVerilog input from `mkalu.v' to AST representation.
Generating RTLIL representation for module `\mkalu'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: mkcsrfile.v
Parsing SystemVerilog input from `mkcsrfile.v' to AST representation.
Generating RTLIL representation for module `\mkcsrfile'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: mkcsr.v
Parsing SystemVerilog input from `mkcsr.v' to AST representation.
Generating RTLIL representation for module `\mkcsr'.
mkcsr.v:74: Warning: Identifier `\csr_EN_ext_interrupt' is implicitly declared.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: RegFile.v
Parsing SystemVerilog input from `RegFile.v' to AST representation.
Generating RTLIL representation for module `\RegFile'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: SyncResetA.v
Parsing SystemVerilog input from `SyncResetA.v' to AST representation.
Generating RTLIL representation for module `\SyncResetA'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: SyncReset0.v
Parsing SystemVerilog input from `SyncReset0.v' to AST representation.
Generating RTLIL representation for module `\SyncReset0'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: SyncRegister.v
Parsing SystemVerilog input from `SyncRegister.v' to AST representation.
Generating RTLIL representation for module `\SyncRegister'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: SyncFIFO.v
Parsing SystemVerilog input from `SyncFIFO.v' to AST representation.
Generating RTLIL representation for module `\SyncFIFO'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: SyncHandshake.v
Parsing SystemVerilog input from `SyncHandshake.v' to AST representation.
Generating RTLIL representation for module `\SyncHandshake'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: FIFO2.v
Parsing SystemVerilog input from `FIFO2.v' to AST representation.
Generating RTLIL representation for module `\FIFO2'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: FIFO1.v
Parsing SystemVerilog input from `FIFO1.v' to AST representation.
Generating RTLIL representation for module `\FIFO1'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: FIFO10.v
Parsing SystemVerilog input from `FIFO10.v' to AST representation.
Generating RTLIL representation for module `\FIFO10'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: FIFO20.v
Parsing SystemVerilog input from `FIFO20.v' to AST representation.
Generating RTLIL representation for module `\FIFO20'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: FIFOL1.v
Parsing SystemVerilog input from `FIFOL1.v' to AST representation.
Generating RTLIL representation for module `\FIFOL1'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: MakeClock.v
Parsing SystemVerilog input from `MakeClock.v' to AST representation.
Generating RTLIL representation for module `\MakeClock'.
Note: Assuming pure combinatorial block at MakeClock.v:99.4-103.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: ClockInverter.v
Parsing SystemVerilog input from `ClockInverter.v' to AST representation.
Generating RTLIL representation for module `\ClockInverter'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: module_decoder_func_32.v
Parsing SystemVerilog input from `module_decoder_func_32.v' to AST representation.
Generating RTLIL representation for module `\module_decoder_func_32'.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:200.3-206.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:207.3-214.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:215.3-222.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:223.3-245.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:246.3-253.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:254.3-279.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:280.3-290.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:291.3-306.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:307.3-328.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:329.3-346.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:347.3-355.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:356.3-367.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:368.3-377.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:378.3-387.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:388.3-399.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:400.3-412.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:413.3-429.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:430.3-439.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:440.3-449.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

28. Executing Verilog-2005 frontend: module_fn_alu.v
Parsing SystemVerilog input from `module_fn_alu.v' to AST representation.
Generating RTLIL representation for module `\reduced_fn_alu'.
module_fn_alu.v:92: Warning: Identifier `\CASE_fn_alu_fn_2_adder_z_flag6_3_NOT_op1_xor_op2_ETC__simplified' is implicitly declared.
Note: Assuming pure combinatorial block at module_fn_alu.v:135.5-141.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:143.5-157.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:159.5-173.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:175.5-182.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

29. Executing Verilog-2005 frontend: uart_tx_8n1.v
Parsing SystemVerilog input from `uart_tx_8n1.v' to AST representation.
Generating RTLIL representation for module `\uart_tx_8n1'.
Successfully finished Verilog frontend.

30. Executing Verilog-2005 frontend: module_address_valid.v
Parsing SystemVerilog input from `module_address_valid.v' to AST representation.
Generating RTLIL representation for module `\module_address_valid'.
Note: Assuming pure combinatorial block at module_address_valid.v:59.3-81.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_address_valid.v:82.3-102.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

31. Executing Verilog-2005 frontend: module_chk_interrupt.v
Parsing SystemVerilog input from `module_chk_interrupt.v' to AST representation.
Generating RTLIL representation for module `\module_chk_interrupt'.
Successfully finished Verilog frontend.

32. Executing Verilog-2005 frontend: module_decode_word32.v
Parsing SystemVerilog input from `module_decode_word32.v' to AST representation.
Generating RTLIL representation for module `\module_decode_word32'.
Successfully finished Verilog frontend.

33. Executing HIERARCHY pass (managing design hierarchy).

33.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 \FIFOL1
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 \RegFile
Used module:                 \FIFO2
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_8n1
Parameter \width = 6
Parameter \guarded = 1'1

33.2. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 6
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 41
Parameter \guarded = 1'1

33.3. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 41
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 52
Parameter \guarded = 1'1

33.4. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 52
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 39
Parameter \guarded = 1'1

33.5. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 39
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 70
Parameter \guarded = 1'1

33.6. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 70
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 1
Parameter \guarded = 1'1

33.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 1
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 32
Parameter \guarded = 1'1

33.8. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 32
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 1
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 64

33.9. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 64
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \width = 64
Found cached RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \width = 51

33.10. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 51
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000110011'.
Parameter \width = 38

33.11. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 38
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000100110'.
Parameter \width = 62

33.12. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 62
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000111110'.
Parameter \width = 34

33.13. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 34
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000100010'.
Parameter \width = 64
Found cached RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \addr_width = 5
Parameter \data_width = 32
Parameter \lo = 5'00000
Parameter \hi = 5'11111

33.14. Executing AST frontend in derive mode using pre-parsed AST for module `\RegFile'.
Parameter \addr_width = 5
Parameter \data_width = 32
Parameter \lo = 5'00000
Parameter \hi = 5'11111
Generating RTLIL representation for module `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile'.
Parameter \width = 35
Parameter \guarded = 1'1

33.15. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 35
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 70

33.16. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 70
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000110'.
Parameter \width = 103

33.17. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 103
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001100111'.

33.18. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_8n1

33.19. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_8n1
Removing unused module `\module_decode_word32'.
Removing unused module `\reduced_fn_alu'.
Removing unused module `\ClockInverter'.
Removing unused module `\MakeClock'.
Removing unused module `\FIFOL1'.
Removing unused module `\FIFO20'.
Removing unused module `\FIFO10'.
Removing unused module `\FIFO1'.
Removing unused module `\FIFO2'.
Removing unused module `\SyncHandshake'.
Removing unused module `\SyncFIFO'.
Removing unused module `\SyncRegister'.
Removing unused module `\SyncReset0'.
Removing unused module `\SyncResetA'.
Removing unused module `\RegFile'.
Removing unused module `\uart_tx_minimal'.
Removed 16 unused modules.
Warning: Resizing cell port mkstage3.csr.trap_handler from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.trap_pc from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.trap_cause from 1 bits to 6 bits.
Warning: Resizing cell port mkstage3.csr.csr_rdata from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.csr_wdata from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.csr_addr from 1 bits to 12 bits.
Warning: Resizing cell port mkeclass.ff_inst_request.D_OUT from 34 bits to 32 bits.
Warning: Resizing cell port mkeclass.ff_inst_request.D_IN from 34 bits to 32 bits.
Warning: Resizing cell port mkeclass_axi4.instr_mem.addr from 14 bits to 32 bits.

34. Executing SYNTH_ICE40 pass.

34.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Replacing existing blackbox module `\SB_IO' at /usr/bin/../share/yosys/ice40/cells_sim.v:17.1-121.10.
Generating RTLIL representation for module `\SB_IO'.
Replacing existing blackbox module `\SB_GB_IO' at /usr/bin/../share/yosys/ice40/cells_sim.v:123.1-160.10.
Generating RTLIL representation for module `\SB_GB_IO'.
Replacing existing blackbox module `\SB_GB' at /usr/bin/../share/yosys/ice40/cells_sim.v:162.1-172.10.
Generating RTLIL representation for module `\SB_GB'.
Replacing existing module `\SB_LUT4' at /usr/bin/../share/yosys/ice40/cells_sim.v:177.1-225.10.
Generating RTLIL representation for module `\SB_LUT4'.
Replacing existing module `\SB_CARRY' at /usr/bin/../share/yosys/ice40/cells_sim.v:228.1-260.10.
Generating RTLIL representation for module `\SB_CARRY'.
Replacing existing module `\SB_DFF' at /usr/bin/../share/yosys/ice40/cells_sim.v:265.1-300.10.
Generating RTLIL representation for module `\SB_DFF'.
Replacing existing module `\SB_DFFE' at /usr/bin/../share/yosys/ice40/cells_sim.v:303.1-347.10.
Generating RTLIL representation for module `\SB_DFFE'.
Replacing existing module `\SB_DFFSR' at /usr/bin/../share/yosys/ice40/cells_sim.v:350.1-397.10.
Generating RTLIL representation for module `\SB_DFFSR'.
Replacing existing module `\SB_DFFR' at /usr/bin/../share/yosys/ice40/cells_sim.v:400.1-468.10.
Generating RTLIL representation for module `\SB_DFFR'.
Replacing existing module `\SB_DFFSS' at /usr/bin/../share/yosys/ice40/cells_sim.v:471.1-518.10.
Generating RTLIL representation for module `\SB_DFFSS'.
Replacing existing module `\SB_DFFS' at /usr/bin/../share/yosys/ice40/cells_sim.v:521.1-589.10.
Generating RTLIL representation for module `\SB_DFFS'.
Replacing existing module `\SB_DFFESR' at /usr/bin/../share/yosys/ice40/cells_sim.v:592.1-650.10.
Generating RTLIL representation for module `\SB_DFFESR'.
Replacing existing module `\SB_DFFER' at /usr/bin/../share/yosys/ice40/cells_sim.v:653.1-730.10.
Generating RTLIL representation for module `\SB_DFFER'.
Replacing existing module `\SB_DFFESS' at /usr/bin/../share/yosys/ice40/cells_sim.v:733.1-791.10.
Generating RTLIL representation for module `\SB_DFFESS'.
Replacing existing module `\SB_DFFES' at /usr/bin/../share/yosys/ice40/cells_sim.v:794.1-871.10.
Generating RTLIL representation for module `\SB_DFFES'.
Replacing existing module `\SB_DFFN' at /usr/bin/../share/yosys/ice40/cells_sim.v:876.1-911.10.
Generating RTLIL representation for module `\SB_DFFN'.
Replacing existing module `\SB_DFFNE' at /usr/bin/../share/yosys/ice40/cells_sim.v:914.1-958.10.
Generating RTLIL representation for module `\SB_DFFNE'.
Replacing existing module `\SB_DFFNSR' at /usr/bin/../share/yosys/ice40/cells_sim.v:961.1-1008.10.
Generating RTLIL representation for module `\SB_DFFNSR'.
Replacing existing module `\SB_DFFNR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1011.1-1079.10.
Generating RTLIL representation for module `\SB_DFFNR'.
Replacing existing module `\SB_DFFNSS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1082.1-1129.10.
Generating RTLIL representation for module `\SB_DFFNSS'.
Replacing existing module `\SB_DFFNS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1132.1-1200.10.
Generating RTLIL representation for module `\SB_DFFNS'.
Replacing existing module `\SB_DFFNESR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1203.1-1261.10.
Generating RTLIL representation for module `\SB_DFFNESR'.
Replacing existing module `\SB_DFFNER' at /usr/bin/../share/yosys/ice40/cells_sim.v:1264.1-1341.10.
Generating RTLIL representation for module `\SB_DFFNER'.
Replacing existing module `\SB_DFFNESS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1344.1-1402.10.
Generating RTLIL representation for module `\SB_DFFNESS'.
Replacing existing module `\SB_DFFNES' at /usr/bin/../share/yosys/ice40/cells_sim.v:1405.1-1483.10.
Generating RTLIL representation for module `\SB_DFFNES'.
Replacing existing blackbox module `\SB_RAM40_4K' at /usr/bin/../share/yosys/ice40/cells_sim.v:1487.1-1724.10.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Replacing existing blackbox module `\SB_RAM40_4KNR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1726.1-1860.10.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Replacing existing blackbox module `\SB_RAM40_4KNW' at /usr/bin/../share/yosys/ice40/cells_sim.v:1862.1-1996.10.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Replacing existing blackbox module `\SB_RAM40_4KNRNW' at /usr/bin/../share/yosys/ice40/cells_sim.v:1998.1-2132.10.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Replacing existing blackbox module `\ICESTORM_LC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2136.1-2420.10.
Generating RTLIL representation for module `\ICESTORM_LC'.
Replacing existing blackbox module `\SB_PLL40_CORE' at /usr/bin/../share/yosys/ice40/cells_sim.v:2425.1-2453.10.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Replacing existing blackbox module `\SB_PLL40_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2456.1-2484.10.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Replacing existing blackbox module `\SB_PLL40_2_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2487.1-2518.10.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Replacing existing blackbox module `\SB_PLL40_2F_CORE' at /usr/bin/../share/yosys/ice40/cells_sim.v:2521.1-2553.10.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Replacing existing blackbox module `\SB_PLL40_2F_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2556.1-2588.10.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Replacing existing blackbox module `\SB_WARMBOOT' at /usr/bin/../share/yosys/ice40/cells_sim.v:2593.1-2598.10.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Replacing existing blackbox module `\SB_SPRAM256KA' at /usr/bin/../share/yosys/ice40/cells_sim.v:2600.1-2661.10.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Replacing existing blackbox module `\SB_HFOSC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2664.1-2681.10.
Generating RTLIL representation for module `\SB_HFOSC'.
Replacing existing blackbox module `\SB_LFOSC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2684.1-2689.10.
Generating RTLIL representation for module `\SB_LFOSC'.
Replacing existing blackbox module `\SB_RGBA_DRV' at /usr/bin/../share/yosys/ice40/cells_sim.v:2692.1-2706.10.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Replacing existing blackbox module `\SB_LED_DRV_CUR' at /usr/bin/../share/yosys/ice40/cells_sim.v:2709.1-2713.10.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Replacing existing blackbox module `\SB_RGB_DRV' at /usr/bin/../share/yosys/ice40/cells_sim.v:2716.1-2730.10.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Replacing existing blackbox module `\SB_I2C' at /usr/bin/../share/yosys/ice40/cells_sim.v:2733.1-2773.10.
Generating RTLIL representation for module `\SB_I2C'.
Replacing existing blackbox module `\SB_SPI' at /usr/bin/../share/yosys/ice40/cells_sim.v:2776.1-2827.10.
Generating RTLIL representation for module `\SB_SPI'.
Replacing existing blackbox module `\SB_LEDDA_IP' at /usr/bin/../share/yosys/ice40/cells_sim.v:2830.1-2853.10.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Replacing existing blackbox module `\SB_FILTER_50NS' at /usr/bin/../share/yosys/ice40/cells_sim.v:2856.1-2860.10.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Replacing existing blackbox module `\SB_IO_I3C' at /usr/bin/../share/yosys/ice40/cells_sim.v:2862.1-2929.10.
Generating RTLIL representation for module `\SB_IO_I3C'.
Replacing existing blackbox module `\SB_IO_OD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2931.1-2993.10.
Generating RTLIL representation for module `\SB_IO_OD'.
Replacing existing blackbox module `\SB_MAC16' at /usr/bin/../share/yosys/ice40/cells_sim.v:2996.1-3164.10.
Generating RTLIL representation for module `\SB_MAC16'.
Replacing existing blackbox module `\ICESTORM_RAM' at /usr/bin/../share/yosys/ice40/cells_sim.v:3167.1-3502.10.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

34.2. Executing HIERARCHY pass (managing design hierarchy).

34.2.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_8n1

34.2.2. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_8n1
Removed 0 unused modules.

34.3. Executing PROC pass (convert processes to netlists).

34.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `bram.$proc$bram.v:0$187'.
Cleaned up 0 empty switches.

34.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:82$1064 in module module_address_valid.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:59$1040 in module module_address_valid.
Marked 2 switch rules as full_case in process $proc$uart_tx_8n1.v:37$1008 in module uart_tx_8n1.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1410 in module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:440$949 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:430$948 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:413$946 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:400$944 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:388$943 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:378$942 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:368$941 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:356$940 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:347$939 in module module_decoder_func_32.
Removed 1 dead cases from process $proc$module_decoder_func_32.v:329$938 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:329$938 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:307$931 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:291$927 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:280$922 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:254$908 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:246$907 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:223$883 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:215$882 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:207$881 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:200$880 in module module_decoder_func_32.
Removed 1 dead cases from process $proc$FIFO2.v:0$1405 in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1405 in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1382 in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$RegFile.v:44$1364 in module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1360 in module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1355 in module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1350 in module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1345 in module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1340 in module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Removed 1 dead cases from process $proc$FIFO2.v:0$1335 in module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1335 in module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1312 in module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1300 in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1300 in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1277 in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1265 in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1265 in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1242 in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1230 in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1230 in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1207 in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1195 in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1195 in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1172 in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1160 in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1160 in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1137 in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:157$579 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkalu.v:80$571 in module mkalu.
Removed 1 dead cases from process $proc$mkalu.v:50$559 in module mkalu.
Marked 1 switch rules as full_case in process $proc$mkalu.v:50$559 in module mkalu.
Marked 1 switch rules as full_case in process $proc$mkstage3.v:914$548 in module mkstage3.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:871$398 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:858$397 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:858$397 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:830$396 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:830$396 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:821$395 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:821$395 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:754$367 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:780$351 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:680$315 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1349$258 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1322$255 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1314$254 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1306$253 in module mkeclass.
Removed 1 dead cases from process $proc$FIFO2.v:0$1125 in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1125 in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1102 in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Marked 2 switch rules as full_case in process $proc$axi4_uart_bridge.v:16$174 in module axi4_uart_bridge.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1660 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1653 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1649 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1642 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1639 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1636 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1633 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1630 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1622 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1615 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1611 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1604 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1601 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1598 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1595 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1592 in module SB_DFFSR.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1415 in module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
Removed a total of 13 dead cases.

34.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 109 assignments to connections.

34.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_tx_8n1.$proc$uart_tx_8n1.v:31$1025'.
  Set init value: \txdone = 1'0
Found init rule in `\uart_tx_8n1.$proc$uart_tx_8n1.v:30$1024'.
  Set init value: \txbit = 1'1
Found init rule in `\uart_tx_8n1.$proc$uart_tx_8n1.v:29$1023'.
  Set init value: \bits_sent = 8'00000000
Found init rule in `\uart_tx_8n1.$proc$uart_tx_8n1.v:28$1022'.
  Set init value: \buf_tx = 8'00000000
Found init rule in `\uart_tx_8n1.$proc$uart_tx_8n1.v:27$1021'.
  Set init value: \state = 8'00000000
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1663'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1659'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1652'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1641'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1638'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1635'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1632'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1629'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1627'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1625'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1621'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1614'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1610'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1603'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1600'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1597'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1594'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1591'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1589'.
  Set init value: \Q = 1'0

34.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
Found async reset \RST_N in `\mkcsrfile.$proc$mkcsrfile.v:157$579'.
Found async reset \RST_N in `\mkalu.$proc$mkalu.v:80$571'.
Found async reset \RST_N in `\mkstage3.$proc$mkstage3.v:914$548'.
Found async reset \RST_N in `\mkstage2.$proc$mkstage2.v:871$398'.
Found async reset \RST_N in `\mkstage1.$proc$mkstage1.v:780$351'.
Found async reset \RST_N in `\mkeclass.$proc$mkeclass.v:1349$258'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1660'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1649'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1639'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1633'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1622'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1611'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1601'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1595'.

34.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~149 debug messages>

34.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:82$1064'.
     1/1: $1\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:59$1040'.
     1/1: $1\CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1[0:0]
Creating decoders for process `\uart_tx_8n1.$proc$uart_tx_8n1.v:31$1025'.
Creating decoders for process `\uart_tx_8n1.$proc$uart_tx_8n1.v:30$1024'.
Creating decoders for process `\uart_tx_8n1.$proc$uart_tx_8n1.v:29$1023'.
Creating decoders for process `\uart_tx_8n1.$proc$uart_tx_8n1.v:28$1022'.
Creating decoders for process `\uart_tx_8n1.$proc$uart_tx_8n1.v:27$1021'.
Creating decoders for process `\uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
     1/5: $1\bits_sent[7:0]
     2/5: $0\txbit[0:0]
     3/5: $0\buf_tx[7:0]
     4/5: $0\state[7:0]
     5/5: $0\txdone[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1412'.
     1/1: $0\D_OUT[69:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1410'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:440$949'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12[1:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:430$948'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11[1:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:413$946'.
     1/1: $1\IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:400$944'.
     1/1: $1\fn___1__h4290[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:388$943'.
     1/1: $1\fn___1__h4242[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:378$942'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10[7:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:368$941'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9[10:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:356$940'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:347$939'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:329$938'.
     1/1: $1\IF_decoder_func_32_inst_BITS_6_TO_5_5_EQ_0b0_6_ETC___d143[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:307$931'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q6[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:291$927'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:280$922'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_14_TO_12_0_deco_ETC__q4[0:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:254$908'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:246$907'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:223$883'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:215$882'.
     1/1: $1\_theResult_____5_snd__h893[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:207$881'.
     1/1: $1\_theResult_____5_snd__h948[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:200$880'.
     1/1: $1\x__h260[4:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1405'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1373_DATA[34:0]$1407
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1374_ADDR[0:0]$1395
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1374_DATA[34:0]$1396
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1375_DATA[34:0]$1398
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1375_ADDR[0:0]$1397
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1375_DATA[34:0]$1394
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1375_ADDR[0:0]$1393
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1374_DATA[34:0]$1392
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1374_ADDR[0:0]$1391
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1375_DATA[34:0]$1390
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1375_ADDR[0:0]$1389
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1374_DATA[34:0]$1388
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1374_ADDR[0:0]$1387
    13/17: $0\mem[1][34:0]
    14/17: $0\mem[0][34:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1364'.
     1/3: $1$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1370
     2/3: $1$memwr$\reg_file$RegFile.v:45$1363_DATA[31:0]$1369
     3/3: $1$memwr$\reg_file$RegFile.v:45$1363_ADDR[4:0]$1368
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1362'.
     1/1: $0\D_OUT[33:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1360'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1357'.
     1/1: $0\D_OUT[61:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1355'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1352'.
     1/1: $0\D_OUT[37:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1350'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1347'.
     1/1: $0\D_OUT[50:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1345'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1342'.
     1/1: $0\D_OUT[63:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1340'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1335'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1303_DATA[31:0]$1337
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1304_ADDR[0:0]$1325
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1304_DATA[31:0]$1326
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1305_DATA[31:0]$1328
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1305_ADDR[0:0]$1327
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1305_DATA[31:0]$1324
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1305_ADDR[0:0]$1323
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1304_DATA[31:0]$1322
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1304_ADDR[0:0]$1321
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1305_DATA[31:0]$1320
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1305_ADDR[0:0]$1319
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1304_DATA[31:0]$1318
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1304_ADDR[0:0]$1317
    13/17: $0\mem[1][31:0]
    14/17: $0\mem[0][31:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1300'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1268_DATA[0:0]$1302
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1269_ADDR[0:0]$1290
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1269_DATA[0:0]$1291
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1270_DATA[0:0]$1293
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1270_ADDR[0:0]$1292
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1270_DATA[0:0]$1289
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1270_ADDR[0:0]$1288
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1269_DATA[0:0]$1287
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1269_ADDR[0:0]$1286
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1270_DATA[0:0]$1285
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1270_ADDR[0:0]$1284
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1269_DATA[0:0]$1283
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1269_ADDR[0:0]$1282
    13/17: $0\mem[1][0:0]
    14/17: $0\mem[0][0:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1265'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1233_DATA[69:0]$1267
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1234_ADDR[0:0]$1255
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1234_DATA[69:0]$1256
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1235_DATA[69:0]$1258
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1235_ADDR[0:0]$1257
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1235_DATA[69:0]$1254
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1235_ADDR[0:0]$1253
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1234_DATA[69:0]$1252
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1234_ADDR[0:0]$1251
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1235_DATA[69:0]$1250
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1235_ADDR[0:0]$1249
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1234_DATA[69:0]$1248
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1234_ADDR[0:0]$1247
    13/17: $0\mem[1][69:0]
    14/17: $0\mem[0][69:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1230'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1198_DATA[38:0]$1232
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1199_ADDR[0:0]$1220
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1199_DATA[38:0]$1221
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1200_DATA[38:0]$1223
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1200_ADDR[0:0]$1222
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1200_DATA[38:0]$1219
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1200_ADDR[0:0]$1218
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1199_DATA[38:0]$1217
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1199_ADDR[0:0]$1216
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1200_DATA[38:0]$1215
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1200_ADDR[0:0]$1214
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1199_DATA[38:0]$1213
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1199_ADDR[0:0]$1212
    13/17: $0\mem[1][38:0]
    14/17: $0\mem[0][38:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1195'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1163_DATA[51:0]$1197
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1164_ADDR[0:0]$1185
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1164_DATA[51:0]$1186
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1165_DATA[51:0]$1188
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1165_ADDR[0:0]$1187
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1165_DATA[51:0]$1184
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1165_ADDR[0:0]$1183
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1164_DATA[51:0]$1182
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1164_ADDR[0:0]$1181
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1165_DATA[51:0]$1180
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1165_ADDR[0:0]$1179
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1164_DATA[51:0]$1178
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1164_ADDR[0:0]$1177
    13/17: $0\mem[1][51:0]
    14/17: $0\mem[0][51:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1160'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1128_DATA[40:0]$1162
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1129_ADDR[0:0]$1150
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1129_DATA[40:0]$1151
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1130_DATA[40:0]$1153
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1130_ADDR[0:0]$1152
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1130_DATA[40:0]$1149
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1130_ADDR[0:0]$1148
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1129_DATA[40:0]$1147
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1129_ADDR[0:0]$1146
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1130_DATA[40:0]$1145
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1130_ADDR[0:0]$1144
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1129_DATA[40:0]$1143
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1129_ADDR[0:0]$1142
    13/17: $0\mem[1][40:0]
    14/17: $0\mem[0][40:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:157$579'.
     1/4: $0\rg_mip[0:0]
     2/4: $0\rg_mie[0:0]
     3/4: $0\rg_mepc[31:0]
     4/4: $0\rg_mcause[3:0]
Creating decoders for process `\mkalu.$proc$mkalu.v:80$571'.
     1/1: $0\RDY_inputs[0:0]
Creating decoders for process `\mkalu.$proc$mkalu.v:68$565'.
Creating decoders for process `\mkalu.$proc$mkalu.v:50$559'.
     1/1: $1\alu_result[31:0]
Creating decoders for process `\mkstage3.$proc$mkstage3.v:914$548'.
     1/3: $0\wr_memory_response[34:0]
     2/3: $0\rg_rerun[0:0]
     3/3: $0\rg_epoch[0:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:871$398'.
     1/2: $0\rg_eEpoch[0:0]
     2/2: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:858$397'.
     1/1: $1\CASE_aluinputs_BITS_72_TO_71_0_aluinputs_BIT_ETC__q4[1:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:830$396'.
     1/1: $1\IF_alu_inputs_16_BITS_72_TO_71_21_EQ_0_22_THEN_ETC___d280[48:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:821$395'.
     1/1: $1\_op2__h2304[31:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:754$367'.
     1/1: $1\alu_inputs_op3[31:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:780$351'.
     1/8: $0\rg_wfi[0:0]
     2/8: $0\rg_pc[31:0]
     3/8: $0\rg_initialize[0:0]
     4/8: $0\rg_index[4:0]
     5/8: $0\rg_fabric_request[31:0]
     6/8: $0\rg_eEpoch[0:0]
     7/8: $0\rg_action[0:0]
     8/8: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:680$315'.
     1/1: $1\rg_pc_D_IN[31:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1349$258'.
     1/1: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1322$255'.
     1/1: $1\CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3[31:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1314$254'.
     1/1: $1\write_strobe__h2618[3:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1306$253'.
     1/1: $1\w_wdata__h3100[31:0]
Creating decoders for process `\bram.$proc$bram.v:13$184'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1125'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1093_DATA[5:0]$1127
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1094_ADDR[0:0]$1115
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1094_DATA[5:0]$1116
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1095_DATA[5:0]$1118
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1095_ADDR[0:0]$1117
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1095_DATA[5:0]$1114
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1095_ADDR[0:0]$1113
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1094_DATA[5:0]$1112
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1094_ADDR[0:0]$1111
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1095_DATA[5:0]$1110
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1095_ADDR[0:0]$1109
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1094_DATA[5:0]$1108
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1094_ADDR[0:0]$1107
    13/17: $0\mem[1][5:0]
    14/17: $0\mem[0][5:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:16$174'.
     1/2: $0\send[0:0]
     2/2: $0\tx_data[7:0]
Creating decoders for process `\mkeclass_axi4.$proc$mkeclass_axi4.v:17$170'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1663'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1660'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1659'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1653'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1652'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1649'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1642'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1641'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1639'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1638'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1636'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1635'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1633'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1632'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1630'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1629'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1628'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1627'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$1626'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1625'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1622'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1621'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1615'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1614'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1611'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1610'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1604'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1603'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1601'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1600'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1598'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1597'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1595'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1594'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1592'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1591'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1590'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1589'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1588'.
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1417'.
     1/1: $0\D_OUT[102:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1415'.
     1/1: $0\empty_reg[0:0]

34.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2' from process `\module_address_valid.$proc$module_address_valid.v:82$1064'.
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1' from process `\module_address_valid.$proc$module_address_valid.v:59$1040'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:440$949'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:430$948'.
No latch inferred for signal `\module_decoder_func_32.\IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:413$946'.
No latch inferred for signal `\module_decoder_func_32.\fn___1__h4290' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:400$944'.
No latch inferred for signal `\module_decoder_func_32.\fn___1__h4242' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:388$943'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:378$942'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:368$941'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:356$940'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:347$939'.
No latch inferred for signal `\module_decoder_func_32.\IF_decoder_func_32_inst_BITS_6_TO_5_5_EQ_0b0_6_ETC___d143' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:329$938'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q6' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:307$931'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:291$927'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_14_TO_12_0_deco_ETC__q4' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:280$922'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:254$908'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:246$907'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:223$883'.
No latch inferred for signal `\module_decoder_func_32.\_theResult_____5_snd__h893' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:215$882'.
No latch inferred for signal `\module_decoder_func_32.\_theResult_____5_snd__h948' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:207$881'.
No latch inferred for signal `\module_decoder_func_32.\x__h260' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:200$880'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1373_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1405'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1303_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1335'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1268_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1300'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1233_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1265'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1198_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1230'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1163_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1195'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1128_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1160'.
No latch inferred for signal `\mkalu.\inputs' from process `\mkalu.$proc$mkalu.v:68$565'.
No latch inferred for signal `\mkalu.\alu_result' from process `\mkalu.$proc$mkalu.v:50$559'.
No latch inferred for signal `\mkstage2.\CASE_aluinputs_BITS_72_TO_71_0_aluinputs_BIT_ETC__q4' from process `\mkstage2.$proc$mkstage2.v:858$397'.
No latch inferred for signal `\mkstage2.\IF_alu_inputs_16_BITS_72_TO_71_21_EQ_0_22_THEN_ETC___d280' from process `\mkstage2.$proc$mkstage2.v:830$396'.
No latch inferred for signal `\mkstage2.\_op2__h2304' from process `\mkstage2.$proc$mkstage2.v:821$395'.
No latch inferred for signal `\mkstage2.\alu_inputs_op3' from process `\mkstage2.$proc$mkstage2.v:754$367'.
No latch inferred for signal `\mkstage1.\rg_pc_D_IN' from process `\mkstage1.$proc$mkstage1.v:680$315'.
No latch inferred for signal `\mkeclass.\CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3' from process `\mkeclass.$proc$mkeclass.v:1322$255'.
No latch inferred for signal `\mkeclass.\write_strobe__h2618' from process `\mkeclass.$proc$mkeclass.v:1314$254'.
No latch inferred for signal `\mkeclass.\w_wdata__h3100' from process `\mkeclass.$proc$mkeclass.v:1306$253'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1093_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1125'.

34.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\uart_tx_8n1.\txdone' using process `\uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
  created $dff cell `$procdff$2886' with positive edge clock.
Creating register for signal `\uart_tx_8n1.\state' using process `\uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
  created $dff cell `$procdff$2887' with positive edge clock.
Creating register for signal `\uart_tx_8n1.\buf_tx' using process `\uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
  created $dff cell `$procdff$2888' with positive edge clock.
Creating register for signal `\uart_tx_8n1.\bits_sent' using process `\uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
  created $dff cell `$procdff$2889' with positive edge clock.
Creating register for signal `\uart_tx_8n1.\txbit' using process `\uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
  created $dff cell `$procdff$2890' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1412'.
  created $dff cell `$procdff$2891' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1410'.
  created $dff cell `$procdff$2892' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2893' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2894' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2895' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2896' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2897' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1374_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2898' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1374_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2899' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1375_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2900' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1375_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
  created $adff cell `$procdff$2901' with positive edge clock and positive level reset.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\reg_file$RegFile.v:45$1363_ADDR' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1364'.
  created $dff cell `$procdff$2902' with positive edge clock.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\reg_file$RegFile.v:45$1363_DATA' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1364'.
  created $dff cell `$procdff$2903' with positive edge clock.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\reg_file$RegFile.v:45$1363_EN' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1364'.
  created $dff cell `$procdff$2904' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100010.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1362'.
  created $dff cell `$procdff$2905' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100010.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1360'.
  created $dff cell `$procdff$2906' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000111110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1357'.
  created $dff cell `$procdff$2907' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000111110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1355'.
  created $dff cell `$procdff$2908' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1352'.
  created $dff cell `$procdff$2909' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1350'.
  created $dff cell `$procdff$2910' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000110011.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1347'.
  created $dff cell `$procdff$2911' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000110011.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1345'.
  created $dff cell `$procdff$2912' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000000.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1342'.
  created $dff cell `$procdff$2913' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000000.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1340'.
  created $dff cell `$procdff$2914' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2915' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2916' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2917' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2918' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2919' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1304_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2920' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1304_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2921' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1305_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2922' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1305_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
  created $adff cell `$procdff$2923' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2924' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2925' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2926' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2927' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2928' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1269_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2929' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1269_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2930' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1270_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2931' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1270_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
  created $adff cell `$procdff$2932' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2933' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2934' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2935' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2936' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2937' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1234_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2938' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1234_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2939' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1235_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2940' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1235_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
  created $adff cell `$procdff$2941' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2942' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2943' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2944' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2945' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2946' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1199_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2947' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1199_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2948' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1200_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2949' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1200_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
  created $adff cell `$procdff$2950' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2951' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2952' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2953' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2954' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2955' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1164_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2956' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1164_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2957' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1165_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2958' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1165_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
  created $adff cell `$procdff$2959' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2960' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2961' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2962' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2963' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2964' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1129_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2965' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1129_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2966' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1130_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2967' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1130_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
  created $adff cell `$procdff$2968' with positive edge clock and positive level reset.
Creating register for signal `\mkcsrfile.\rg_mcause' using process `\mkcsrfile.$proc$mkcsrfile.v:157$579'.
  created $adff cell `$procdff$2969' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mepc' using process `\mkcsrfile.$proc$mkcsrfile.v:157$579'.
  created $adff cell `$procdff$2970' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mie' using process `\mkcsrfile.$proc$mkcsrfile.v:157$579'.
  created $adff cell `$procdff$2971' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mip' using process `\mkcsrfile.$proc$mkcsrfile.v:157$579'.
  created $adff cell `$procdff$2972' with positive edge clock and negative level reset.
Creating register for signal `\mkalu.\RDY_inputs' using process `\mkalu.$proc$mkalu.v:80$571'.
  created $adff cell `$procdff$2973' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\rg_epoch' using process `\mkstage3.$proc$mkstage3.v:914$548'.
  created $adff cell `$procdff$2974' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\rg_rerun' using process `\mkstage3.$proc$mkstage3.v:914$548'.
  created $adff cell `$procdff$2975' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\wr_memory_response' using process `\mkstage3.$proc$mkstage3.v:914$548'.
  created $adff cell `$procdff$2976' with positive edge clock and negative level reset.
Creating register for signal `\mkstage2.\rg_wEpoch' using process `\mkstage2.$proc$mkstage2.v:871$398'.
  created $adff cell `$procdff$2977' with positive edge clock and negative level reset.
Creating register for signal `\mkstage2.\rg_eEpoch' using process `\mkstage2.$proc$mkstage2.v:871$398'.
  created $adff cell `$procdff$2978' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_wEpoch' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2979' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_action' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2980' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_eEpoch' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2981' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_fabric_request' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2982' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_index' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2983' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_initialize' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2984' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_pc' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2985' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_wfi' using process `\mkstage1.$proc$mkstage1.v:780$351'.
  created $adff cell `$procdff$2986' with positive edge clock and negative level reset.
Creating register for signal `\mkeclass.\rg_wEpoch' using process `\mkeclass.$proc$mkeclass.v:1349$258'.
  created $adff cell `$procdff$2987' with positive edge clock and negative level reset.
Creating register for signal `\bram.\rdata' using process `\bram.$proc$bram.v:13$184'.
  created $dff cell `$procdff$2988' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2989' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2990' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2991' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2992' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2993' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1094_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2994' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1094_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2995' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1095_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2996' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1095_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
  created $adff cell `$procdff$2997' with positive edge clock and positive level reset.
Creating register for signal `\axi4_uart_bridge.\tx_data' using process `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:16$174'.
  created $dff cell `$procdff$2998' with positive edge clock.
Creating register for signal `\axi4_uart_bridge.\send' using process `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:16$174'.
  created $dff cell `$procdff$2999' with positive edge clock.
Creating register for signal `\mkeclass_axi4.\reset_sync' using process `\mkeclass_axi4.$proc$mkeclass_axi4.v:17$170'.
  created $dff cell `$procdff$3000' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1660'.
  created $adff cell `$procdff$3001' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1653'.
  created $dff cell `$procdff$3002' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1649'.
  created $adff cell `$procdff$3003' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1642'.
  created $dff cell `$procdff$3004' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1639'.
  created $adff cell `$procdff$3005' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1636'.
  created $dff cell `$procdff$3006' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1633'.
  created $adff cell `$procdff$3007' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1630'.
  created $dff cell `$procdff$3008' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1628'.
  created $dff cell `$procdff$3009' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$1626'.
  created $dff cell `$procdff$3010' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1622'.
  created $adff cell `$procdff$3011' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1615'.
  created $dff cell `$procdff$3012' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1611'.
  created $adff cell `$procdff$3013' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1604'.
  created $dff cell `$procdff$3014' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1601'.
  created $adff cell `$procdff$3015' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1598'.
  created $dff cell `$procdff$3016' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1595'.
  created $adff cell `$procdff$3017' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1592'.
  created $dff cell `$procdff$3018' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1590'.
  created $dff cell `$procdff$3019' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1588'.
  created $dff cell `$procdff$3020' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001100111.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1417'.
  created $dff cell `$procdff$3021' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001100111.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1415'.
  created $dff cell `$procdff$3022' with positive edge clock.

34.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

34.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:82$1064'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:82$1064'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:59$1040'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:59$1040'.
Removing empty process `uart_tx_8n1.$proc$uart_tx_8n1.v:31$1025'.
Removing empty process `uart_tx_8n1.$proc$uart_tx_8n1.v:30$1024'.
Removing empty process `uart_tx_8n1.$proc$uart_tx_8n1.v:29$1023'.
Removing empty process `uart_tx_8n1.$proc$uart_tx_8n1.v:28$1022'.
Removing empty process `uart_tx_8n1.$proc$uart_tx_8n1.v:27$1021'.
Found and cleaned up 6 empty switches in `\uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
Removing empty process `uart_tx_8n1.$proc$uart_tx_8n1.v:37$1008'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1412'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1412'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1410'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1410'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:440$949'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:440$949'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:430$948'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:430$948'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:413$946'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:413$946'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:400$944'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:400$944'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:388$943'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:388$943'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:378$942'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:378$942'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:368$941'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:368$941'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:356$940'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:356$940'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:347$939'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:347$939'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:329$938'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:329$938'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:307$931'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:307$931'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:291$927'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:291$927'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:280$922'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:280$922'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:254$908'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:254$908'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:246$907'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:246$907'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:223$883'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:223$883'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:215$882'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:215$882'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:207$881'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:207$881'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:200$880'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:200$880'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1405'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1405'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1382'.
Found and cleaned up 1 empty switch in `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1364'.
Removing empty process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1364'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1362'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1362'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1360'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1360'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1357'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1357'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1355'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1355'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1352'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1352'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1350'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1350'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1347'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1347'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1345'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1345'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1342'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1342'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1340'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1340'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1335'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1335'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1312'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1300'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1300'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1277'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1265'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1265'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1242'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1230'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1230'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1207'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1195'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1195'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1172'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1160'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1160'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1137'.
Found and cleaned up 3 empty switches in `\mkcsrfile.$proc$mkcsrfile.v:157$579'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:157$579'.
Removing empty process `mkalu.$proc$mkalu.v:80$571'.
Removing empty process `mkalu.$proc$mkalu.v:68$565'.
Found and cleaned up 1 empty switch in `\mkalu.$proc$mkalu.v:50$559'.
Removing empty process `mkalu.$proc$mkalu.v:50$559'.
Found and cleaned up 3 empty switches in `\mkstage3.$proc$mkstage3.v:914$548'.
Removing empty process `mkstage3.$proc$mkstage3.v:914$548'.
Found and cleaned up 2 empty switches in `\mkstage2.$proc$mkstage2.v:871$398'.
Removing empty process `mkstage2.$proc$mkstage2.v:871$398'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:858$397'.
Removing empty process `mkstage2.$proc$mkstage2.v:858$397'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:830$396'.
Removing empty process `mkstage2.$proc$mkstage2.v:830$396'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:821$395'.
Removing empty process `mkstage2.$proc$mkstage2.v:821$395'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:754$367'.
Removing empty process `mkstage2.$proc$mkstage2.v:754$367'.
Found and cleaned up 8 empty switches in `\mkstage1.$proc$mkstage1.v:780$351'.
Removing empty process `mkstage1.$proc$mkstage1.v:780$351'.
Found and cleaned up 1 empty switch in `\mkstage1.$proc$mkstage1.v:680$315'.
Removing empty process `mkstage1.$proc$mkstage1.v:680$315'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1349$258'.
Removing empty process `mkeclass.$proc$mkeclass.v:1349$258'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1322$255'.
Removing empty process `mkeclass.$proc$mkeclass.v:1322$255'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1314$254'.
Removing empty process `mkeclass.$proc$mkeclass.v:1314$254'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1306$253'.
Removing empty process `mkeclass.$proc$mkeclass.v:1306$253'.
Removing empty process `bram.$proc$bram.v:13$184'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1125'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1125'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1102'.
Found and cleaned up 2 empty switches in `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:16$174'.
Removing empty process `axi4_uart_bridge.$proc$axi4_uart_bridge.v:16$174'.
Removing empty process `mkeclass_axi4.$proc$mkeclass_axi4.v:17$170'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1663'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1660'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1660'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1659'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1653'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1653'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1652'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1649'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1649'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1642'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1642'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1641'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1639'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1638'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1636'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1636'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1635'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1633'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1632'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1630'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1630'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1629'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1628'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1628'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1627'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$1626'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1625'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1622'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1622'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1621'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1615'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1615'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1614'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1611'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1611'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1610'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1604'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1604'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1603'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1601'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1600'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1598'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1598'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1597'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1595'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1594'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1592'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1592'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1591'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1590'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1590'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1589'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1588'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1417'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1417'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1415'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1415'.
Cleaned up 149 empty switches.

34.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module module_chk_interrupt.
<suppressed ~2 debug messages>
Optimizing module module_address_valid.
<suppressed ~8 debug messages>
Optimizing module uart_tx_8n1.
<suppressed ~4 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
<suppressed ~2 debug messages>
Optimizing module module_decoder_func_32.
<suppressed ~27 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module mkcsr.
Optimizing module mkcsrfile.
Optimizing module mkalu.
<suppressed ~3 debug messages>
Optimizing module mkstage3.
<suppressed ~13 debug messages>
Optimizing module mkstage2.
<suppressed ~6 debug messages>
Optimizing module mkstage1.
<suppressed ~5 debug messages>
Optimizing module mkriscv.
Optimizing module mkeclass.
<suppressed ~12 debug messages>
Optimizing module bram.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module axi4_uart_bridge.
Optimizing module mkeclass_axi4.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
<suppressed ~2 debug messages>

34.4. Executing FLATTEN pass (flatten design).
Deleting now unused module module_chk_interrupt.
Deleting now unused module module_address_valid.
Deleting now unused module uart_tx_8n1.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Deleting now unused module module_decoder_func_32.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Deleting now unused module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Deleting now unused module mkcsr.
Deleting now unused module mkcsrfile.
Deleting now unused module mkalu.
Deleting now unused module mkstage3.
Deleting now unused module mkstage2.
Deleting now unused module mkstage1.
Deleting now unused module mkriscv.
Deleting now unused module mkeclass.
Deleting now unused module bram.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Deleting now unused module axi4_uart_bridge.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
<suppressed ~39 debug messages>

34.5. Executing TRIBUF pass.

34.6. Executing DEMINOUT pass (demote inout ports to input or output).

34.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~453 debug messages>

34.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 429 unused cells and 1921 unused wires.
<suppressed ~578 debug messages>

34.9. Executing CHECK pass (checking for obvious problems).
Checking module mkeclass_axi4...
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.dump_ff.DEQ is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csr_wen is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csrfile.write_csr_addr [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csrfile.write_csr_word [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csr_EN_ext_interrupt is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csrfile.ext_interrupt_ex_i is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [31] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [30] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [29] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [28] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [27] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [26] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [25] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [24] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [23] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [22] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [21] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [20] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [19] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [18] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [16] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [15] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [14] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [13] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [12] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [63] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [62] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [61] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [60] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [59] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [58] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [57] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [56] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [55] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [54] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [53] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [52] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [51] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [50] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [49] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [48] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [47] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [46] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [45] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [44] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [43] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [42] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [41] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [40] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [39] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [38] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [37] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [36] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [35] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [34] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [33] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [32] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [31] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [30] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [29] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [28] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [27] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [26] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [25] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [24] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [23] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [22] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [21] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [20] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [19] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [18] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [16] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [15] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [14] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [13] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [12] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [64] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_csrs [45] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_csrs [52] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_prv [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_prv [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mstatus [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.fetch_xactor_f_rd_addr.D_IN [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv_mv_trap is used but has no driver.
Found and reported 134 problems.

34.10. Executing OPT pass (performing simple optimizations).

34.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~3 debug messages>

34.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~741 debug messages>
Removed a total of 247 cells.

34.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$947: { 1'1 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [14:12] } -> { 2'11 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [13:12] }
  Analyzing evaluation results.
    dead port 1/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2678.
    dead port 2/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2678.
    dead port 3/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2678.
    dead port 5/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2678.
    dead port 1/2 on $mux $flatten\cpu.\riscv.\stage2.$ternary$mkstage2.v:811$388.
    dead port 2/2 on $mux $flatten\cpu.\riscv.\stage2.$ternary$mkstage2.v:811$388.
Removed 6 multiplexer ports.
<suppressed ~131 debug messages>

34.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2439: $auto$opt_reduce.cc:134:opt_pmux$3025
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2446: $auto$opt_reduce.cc:134:opt_pmux$3027
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2528: $auto$opt_reduce.cc:134:opt_pmux$3029
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2535: $auto$opt_reduce.cc:134:opt_pmux$3031
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2617: $auto$opt_reduce.cc:134:opt_pmux$3033
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2624: $auto$opt_reduce.cc:134:opt_pmux$3035
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2796: $auto$opt_reduce.cc:134:opt_pmux$3037
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2803: $auto$opt_reduce.cc:134:opt_pmux$3039
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2528: $auto$opt_reduce.cc:134:opt_pmux$3041
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2535: $auto$opt_reduce.cc:134:opt_pmux$3043
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$2009: $auto$opt_reduce.cc:134:opt_pmux$3045
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$2016: $auto$opt_reduce.cc:134:opt_pmux$3047
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2439: $auto$opt_reduce.cc:134:opt_pmux$3049
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2446: $auto$opt_reduce.cc:134:opt_pmux$3051
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2261: $auto$opt_reduce.cc:134:opt_pmux$3053
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2268: $auto$opt_reduce.cc:134:opt_pmux$3055
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$procmux$2031:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367
      New ports: A=1'0, B=1'1, Y=$flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0]
      New connections: $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [31:1] = { $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1363_EN[31:0]$1367 [0] }
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2172: $auto$opt_reduce.cc:134:opt_pmux$3057
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2179: $auto$opt_reduce.cc:134:opt_pmux$3059
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2350: $auto$opt_reduce.cc:134:opt_pmux$3061
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2357: $auto$opt_reduce.cc:134:opt_pmux$3063
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 21 changes.

34.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

34.10.6. Executing OPT_DFF pass (perform DFF optimizations).

34.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 327 unused wires.
<suppressed ~83 debug messages>

34.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.10.9. Rerunning OPT passes. (Maybe there is more to do..)

34.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

34.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2506: $auto$opt_reduce.cc:134:opt_pmux$3065
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2518: $auto$opt_reduce.cc:134:opt_pmux$3067
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2417: $auto$opt_reduce.cc:134:opt_pmux$3069
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2429: $auto$opt_reduce.cc:134:opt_pmux$3071
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2239: $auto$opt_reduce.cc:134:opt_pmux$3073
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2251: $auto$opt_reduce.cc:134:opt_pmux$3075
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2150: $auto$opt_reduce.cc:134:opt_pmux$3077
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2162: $auto$opt_reduce.cc:134:opt_pmux$3079
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2328: $auto$opt_reduce.cc:134:opt_pmux$3081
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2340: $auto$opt_reduce.cc:134:opt_pmux$3083
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2417: $auto$opt_reduce.cc:134:opt_pmux$3085
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2429: $auto$opt_reduce.cc:134:opt_pmux$3087
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2506: $auto$opt_reduce.cc:134:opt_pmux$3089
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2518: $auto$opt_reduce.cc:134:opt_pmux$3091
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2595: $auto$opt_reduce.cc:134:opt_pmux$3093
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2607: $auto$opt_reduce.cc:134:opt_pmux$3095
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2774: $auto$opt_reduce.cc:134:opt_pmux$3097
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2786: $auto$opt_reduce.cc:134:opt_pmux$3099
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1987: $auto$opt_reduce.cc:134:opt_pmux$3101
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1999: $auto$opt_reduce.cc:134:opt_pmux$3103
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 20 changes.

34.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

34.10.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\cpu.\riscv.\stage3.\csr.\csrfile.$procdff$2971 ($adff) from module mkeclass_axi4 (removing D path).
Setting constant 0-bit at position 0 on $flatten\cpu.\riscv.\stage3.\csr.\csrfile.$procdff$2971 ($dlatch) from module mkeclass_axi4.

34.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

34.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~5 debug messages>

34.10.16. Rerunning OPT passes. (Maybe there is more to do..)

34.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

34.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.10.20. Executing OPT_DFF pass (perform DFF optimizations).

34.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 4 unused cells and 12 unused wires.
<suppressed ~13 debug messages>

34.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.10.23. Rerunning OPT passes. (Maybe there is more to do..)

34.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~131 debug messages>

34.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.10.27. Executing OPT_DFF pass (perform DFF optimizations).

34.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.10.30. Finished OPT passes. (There is nothing left to do.)

34.11. Executing FSM pass (extract and optimize FSM).

34.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking mkeclass_axi4.cpu.memory_xactor_f_rd_data.mem[0] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.cpu.memory_xactor_f_rd_data.mem[1] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.cpu.memory_xactor_f_wr_resp.mem[0] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.cpu.memory_xactor_f_wr_resp.mem[1] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.uart_bridge.uart_tx_inst.state as FSM state register:
    Register has an initialization value.

34.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

34.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

34.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

34.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

34.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

34.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

34.12. Executing OPT pass (performing simple optimizations).

34.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~131 debug messages>

34.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_bridge.\uart_tx_inst.$procdff$2890 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\uart_tx_inst.$0\txbit[0:0], Q = \uart_bridge.uart_tx_inst.txbit).
Adding EN signal on $flatten\uart_bridge.\uart_tx_inst.$procdff$2889 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\uart_tx_inst.$0\bits_sent[7:0], Q = \uart_bridge.uart_tx_inst.bits_sent).
Adding SRST signal on $flatten\uart_bridge.\uart_tx_inst.$procdff$2888 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\uart_tx_inst.$procmux$1826_Y [7], Q = \uart_bridge.uart_tx_inst.buf_tx [7], rval = 1'0).
Adding EN signal on $flatten\uart_bridge.\uart_tx_inst.$procdff$2888 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\uart_tx_inst.$0\buf_tx[7:0] [6:0], Q = \uart_bridge.uart_tx_inst.buf_tx [6:0]).
Adding EN signal on $auto$ff.cc:266:slice$3114 ($sdff) from module mkeclass_axi4 (D = \uart_bridge.tx_data [7], Q = \uart_bridge.uart_tx_inst.buf_tx [7]).
Adding SRST signal on $flatten\uart_bridge.\uart_tx_inst.$procdff$2887 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\uart_tx_inst.$procmux$1839_Y, Q = \uart_bridge.uart_tx_inst.state, rval = 8'00000000).
Adding SRST signal on $flatten\uart_bridge.\uart_tx_inst.$procdff$2886 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\uart_tx_inst.$procmux$1846_Y, Q = \uart_bridge.uart_tx_inst.txdone, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3121 ($sdff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\uart_tx_inst.$procmux$1846_Y, Q = \uart_bridge.uart_tx_inst.txdone).
Adding SRST signal on $flatten\uart_bridge.$procdff$2999 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.$procmux$2818_Y, Q = \uart_bridge.send, rval = 1'0).
Adding EN signal on $flatten\uart_bridge.$procdff$2998 ($dff) from module mkeclass_axi4 (D = \cpu.memory_xactor_f_wr_data.D_OUT [16:9], Q = \uart_bridge.tx_data).
Adding SRST signal on $flatten\cpu.\riscv.\stage3.\dump_ff.$procdff$3022 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage3.\dump_ff.$procmux$2878_Y, Q = \cpu.riscv.stage3.dump_ff.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3131 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage3.\dump_ff.$procmux$2878_Y, Q = \cpu.riscv.stage3.dump_ff.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\stage3.$procdff$2975 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage3.rg_rerun_D_IN, Q = \cpu.riscv.stage3.rg_rerun).
Adding EN signal on $flatten\cpu.\riscv.\stage3.$procdff$2974 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage3.rg_epoch_D_IN, Q = \cpu.riscv.stage3.rg_epoch).
Adding SRST signal on $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procdff$2892 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procmux$1855_Y, Q = \cpu.riscv.stage2.ff_memory_request.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3137 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procmux$1855_Y, Q = \cpu.riscv.stage2.ff_memory_request.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procdff$2891 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2_mv_redirection_fst \cpu.riscv.stage2.alu.inputs_op2 \cpu.riscv.fifof_2.D_OUT [40:39] \cpu.riscv.fifof_2.D_OUT [2:0] \cpu.riscv.stage2.rg_wEpoch }, Q = \cpu.riscv.stage2.ff_memory_request.D_OUT).
Adding EN signal on $flatten\cpu.\riscv.\stage2.$procdff$2978 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage2.rg_eEpoch_D_IN, Q = \cpu.riscv.stage2.rg_eEpoch).
Adding EN signal on $flatten\cpu.\riscv.\stage2.$procdff$2977 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage2.rg_wEpoch_D_IN, Q = \cpu.riscv.stage2.rg_wEpoch).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2897 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.ff_memory_response.D_IN, Q = \cpu.riscv.stage1.ff_memory_response.mem[1]).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2896 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.ff_memory_response.D_IN, Q = \cpu.riscv.stage1.ff_memory_response.mem[0]).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2895 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1399_Y [0], Q = \cpu.riscv.stage1.ff_memory_response.wptr).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2894 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1401_Y [0], Q = \cpu.riscv.stage1.ff_memory_response.rptr).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2893 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\ff_memory_response.$0\count[1:0], Q = \cpu.riscv.stage1.ff_memory_response.count).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2986 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_wfi_D_IN, Q = \cpu.riscv.stage1.rg_wfi).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2985 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_pc_D_IN, Q = \cpu.riscv.stage1.rg_pc).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2984 ($adff) from module mkeclass_axi4 (D = 1'0, Q = \cpu.riscv.stage1.rg_initialize).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2983 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_index_D_IN, Q = \cpu.riscv.stage1.rg_index).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2982 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_fabric_request_D_IN, Q = \cpu.riscv.stage1.rg_fabric_request).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2981 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_eEpoch_D_IN, Q = \cpu.riscv.stage1.rg_eEpoch).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2979 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_wEpoch_D_IN, Q = \cpu.riscv.stage1.rg_wEpoch).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_6.$procdff$2914 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_6.$procmux$2096_Y, Q = \cpu.riscv.fifof_6.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3168 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_6.$procmux$2096_Y, Q = \cpu.riscv.fifof_6.empty_reg).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_5.$procdff$2914 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_5.$procmux$2096_Y, Q = \cpu.riscv.fifof_5.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3172 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_5.$procmux$2096_Y, Q = \cpu.riscv.fifof_5.empty_reg).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_4.$procdff$2912 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_4.$procmux$2083_Y, Q = \cpu.riscv.fifof_4.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3176 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_4.$procmux$2083_Y, Q = \cpu.riscv.fifof_4.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_4.$procdff$2911 ($dff) from module mkeclass_axi4 (D = { 28'0010101010101010101010101010 \cpu.riscv.fifof_2.D_OUT [61:39] }, Q = \cpu.riscv.fifof_4.D_OUT).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_3.$procdff$2910 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_3.$procmux$2070_Y, Q = \cpu.riscv.fifof_3.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3181 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_3.$procmux$2070_Y, Q = \cpu.riscv.fifof_3.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_3.$procdff$2909 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.fifof_1.D_OUT [31:0] \cpu.riscv.fifof_2.D_OUT [51:47] \cpu.riscv.stage2.rg_wEpoch }, Q = \cpu.riscv.fifof_3.D_OUT).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_2.$procdff$2908 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_2.$procmux$2057_Y, Q = \cpu.riscv.fifof_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3186 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_2.$procmux$2057_Y, Q = \cpu.riscv.fifof_2.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_2.$procdff$2907 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.integer_rf_rf.ADDR_2 \cpu.riscv.stage1.integer_rf_rf.ADDR_1 \cpu.riscv.stage1.instance_decoder_func_32_1.x__h260 \cpu.riscv.fifof_2.D_IN [46] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11 \cpu.riscv.stage1.IF_chk_interrupt_7_BIT_1_8_OR_ff_memory_respon_ETC___d68 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12 \cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 \cpu.riscv.stage1.x1_avValue_meta_funct__h2931 }, Q = \cpu.riscv.fifof_2.D_OUT).
Adding SRST signal on $auto$ff.cc:266:slice$3190 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221 [3], Q = \cpu.riscv.fifof_2.D_OUT [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$3190 ($dffe) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [31] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [7:5] }, Q = \cpu.riscv.fifof_2.D_OUT [38:24], rval = 15'000000000000000).
Adding SRST signal on $auto$ff.cc:266:slice$3190 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [11:7], Q = \cpu.riscv.fifof_2.D_OUT [51:47], rval = 5'00000).
Adding SRST signal on $auto$ff.cc:266:slice$3190 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1._theResult___fst__h3006 [5], Q = \cpu.riscv.fifof_2.D_OUT [5], rval = 1'1).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_1.$procdff$2906 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_1.$procmux$2044_Y, Q = \cpu.riscv.fifof_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3198 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_1.$procmux$2044_Y, Q = \cpu.riscv.fifof_1.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_1.$procdff$2905 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_eEpoch \cpu.riscv.stage1.rg_wEpoch \cpu.riscv.stage1.rg_pc }, Q = \cpu.riscv.fifof_1.D_OUT).
Adding SRST signal on $flatten\cpu.\riscv.\fifof.$procdff$2914 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof.$procmux$2096_Y, Q = \cpu.riscv.fifof.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3203 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof.$procmux$2096_Y, Q = \cpu.riscv.fifof.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof.$procdff$2913 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.x__h3155 \cpu.riscv.stage1.x__h3181 }, Q = \cpu.riscv.fifof.D_OUT).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2993 ($adff) from module mkeclass_axi4 (D = 6'000000, Q = \cpu.memory_xactor_f_wr_resp.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2992 ($adff) from module mkeclass_axi4 (D = 6'000000, Q = \cpu.memory_xactor_f_wr_resp.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2991 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:43$1119_Y [0], Q = \cpu.memory_xactor_f_wr_resp.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2990 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:47$1121_Y [0], Q = \cpu.memory_xactor_f_wr_resp.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2989 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_resp.$0\count[1:0], Q = \cpu.memory_xactor_f_wr_resp.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2964 ($adff) from module mkeclass_axi4 (D = { \cpu.w_wdata__h3100 \cpu.w_wstrb__h3101 5'00001 }, Q = \cpu.memory_xactor_f_wr_data.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2963 ($adff) from module mkeclass_axi4 (D = { \cpu.w_wdata__h3100 \cpu.w_wstrb__h3101 5'00001 }, Q = \cpu.memory_xactor_f_wr_data.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2962 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1154_Y [0], Q = \cpu.memory_xactor_f_wr_data.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2961 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1156_Y [0], Q = \cpu.memory_xactor_f_wr_data.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2960 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_data.$0\count[1:0], Q = \cpu.memory_xactor_f_wr_data.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2955 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] 12'001000000000 \cpu.riscv.stage2.ff_memory_request.D_OUT [2:1] 6'010000 }, Q = \cpu.memory_xactor_f_wr_addr.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2954 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] 12'001000000000 \cpu.riscv.stage2.ff_memory_request.D_OUT [2:1] 6'010000 }, Q = \cpu.memory_xactor_f_wr_addr.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2953 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1189_Y [0], Q = \cpu.memory_xactor_f_wr_addr.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2952 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1191_Y [0], Q = \cpu.memory_xactor_f_wr_addr.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2951 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_addr.$0\count[1:0], Q = \cpu.memory_xactor_f_wr_addr.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2946 ($adff) from module mkeclass_axi4 (D = 39'000000000000000000000000000000000010000, Q = \cpu.memory_xactor_f_rd_data.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2945 ($adff) from module mkeclass_axi4 (D = 39'000000000000000000000000000000000010000, Q = \cpu.memory_xactor_f_rd_data.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2944 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1224_Y [0], Q = \cpu.memory_xactor_f_rd_data.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2943 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1226_Y [0], Q = \cpu.memory_xactor_f_rd_data.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2942 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_data.$0\count[1:0], Q = \cpu.memory_xactor_f_rd_data.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_addr.$procdff$2951 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_addr.$0\count[1:0], Q = \cpu.memory_xactor_f_rd_addr.count).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2937 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] \cpu.w_wdata__h3100 \cpu.riscv.stage2.ff_memory_request.D_OUT [5:0] }, Q = \cpu.ff_mem_request.mem[1]).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2936 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] \cpu.w_wdata__h3100 \cpu.riscv.stage2.ff_memory_request.D_OUT [5:0] }, Q = \cpu.ff_mem_request.mem[0]).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2935 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1259_Y [0], Q = \cpu.ff_mem_request.wptr).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2934 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1261_Y [0], Q = \cpu.ff_mem_request.rptr).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2933 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_mem_request.$0\count[1:0], Q = \cpu.ff_mem_request.count).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2919 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request [29:0] \cpu.riscv.stage1.rg_eEpoch \cpu.riscv.stage1.rg_wEpoch }, Q = \cpu.ff_inst_request.mem[1]).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2918 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request [29:0] \cpu.riscv.stage1.rg_eEpoch \cpu.riscv.stage1.rg_wEpoch }, Q = \cpu.ff_inst_request.mem[0]).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2917 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1329_Y [0], Q = \cpu.ff_inst_request.wptr).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2916 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1331_Y [0], Q = \cpu.ff_inst_request.rptr).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2915 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_request.$0\count[1:0], Q = \cpu.ff_inst_request.count).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2928 ($adff) from module mkeclass_axi4 (D = 1'0, Q = \cpu.ff_inst_access_fault.mem[1]).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2927 ($adff) from module mkeclass_axi4 (D = 1'0, Q = \cpu.ff_inst_access_fault.mem[0]).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2926 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:43$1294_Y [0], Q = \cpu.ff_inst_access_fault.wptr).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2925 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:47$1296_Y [0], Q = \cpu.ff_inst_access_fault.rptr).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2924 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_access_fault.$0\count[1:0], Q = \cpu.ff_inst_access_fault.count).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2946 ($adff) from module mkeclass_axi4 (D = { 2'00 \instr_mem.rdata 5'10000 }, Q = \cpu.fetch_xactor_f_rd_data.mem[1]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2945 ($adff) from module mkeclass_axi4 (D = { 2'00 \instr_mem.rdata 5'10000 }, Q = \cpu.fetch_xactor_f_rd_data.mem[0]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2944 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1224_Y [0], Q = \cpu.fetch_xactor_f_rd_data.wptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2943 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1226_Y [0], Q = \cpu.fetch_xactor_f_rd_data.rptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2942 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_data.$0\count[1:0], Q = \cpu.fetch_xactor_f_rd_data.count).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2955 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request 2'00 \cpu.fetch_xactor_f_rd_addr.D_IN [17] 17'01000000000010000 }, Q = \cpu.fetch_xactor_f_rd_addr.mem[1]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2954 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request 2'00 \cpu.fetch_xactor_f_rd_addr.D_IN [17] 17'01000000000010000 }, Q = \cpu.fetch_xactor_f_rd_addr.mem[0]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2953 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1189_Y [0], Q = \cpu.fetch_xactor_f_rd_addr.wptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2952 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1191_Y [0], Q = \cpu.fetch_xactor_f_rd_addr.rptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2951 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_addr.$0\count[1:0], Q = \cpu.fetch_xactor_f_rd_addr.count).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3318 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3315 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3305 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3305 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3305 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3305 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3305 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3305 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3302 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3302 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3302 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3302 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3302 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3302 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3292 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3289 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 32 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 33 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 34 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 36 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3250 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 32 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 33 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 34 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 36 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3247 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3237 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3234 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3224 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3224 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3224 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3224 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3221 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3221 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3221 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3221 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3211 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3211 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3211 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3211 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3211 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3211 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3208 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3208 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3208 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3208 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3208 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3208 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 24 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 26 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 28 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 30 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 32 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 33 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 34 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 36 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 38 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 39 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 40 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 41 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 42 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 43 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 44 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 45 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 46 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 47 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 48 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 49 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 50 on $auto$ff.cc:266:slice$3180 ($dffe) from module mkeclass_axi4.

34.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 105 unused cells and 103 unused wires.
<suppressed ~108 debug messages>

34.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~49 debug messages>

34.12.9. Rerunning OPT passes. (Maybe there is more to do..)

34.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:850$498.
    dead port 2/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:850$498.
    dead port 1/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:854$500.
    dead port 2/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:854$500.
Removed 4 multiplexer ports.
<suppressed ~83 debug messages>

34.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2193: $auto$opt_reduce.cc:134:opt_pmux$3340
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2728: $auto$opt_reduce.cc:134:opt_pmux$3342
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 2 changes.

34.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

34.12.13. Executing OPT_DFF pass (perform DFF optimizations).

34.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 1 unused cells and 22 unused wires.
<suppressed ~5 debug messages>

34.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~11 debug messages>

34.12.16. Rerunning OPT passes. (Maybe there is more to do..)

34.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~81 debug messages>

34.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.12.20. Executing OPT_DFF pass (perform DFF optimizations).

34.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 11 unused cells and 16 unused wires.
<suppressed ~14 debug messages>

34.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.12.23. Rerunning OPT passes. (Maybe there is more to do..)

34.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~81 debug messages>

34.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.12.27. Executing OPT_DFF pass (perform DFF optimizations).

34.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.12.30. Finished OPT passes. (There is nothing left to do.)

34.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 22 address bits (of 32) from memory init port mkeclass_axi4.$flatten\instr_mem.$meminit$\mem$bram.v:0$186 (instr_mem.mem).
Removed top 23 bits (of 32) from port B of cell mkeclass_axi4.$eq$mkeclass_axi4.v:44$171 ($eq).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$eq$uart_tx_8n1.v:50$1013 ($eq).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$eq$uart_tx_8n1.v:55$1014 ($eq).
Removed top 4 bits (of 8) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$lt$uart_tx_8n1.v:55$1015 ($lt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$add$uart_tx_8n1.v:58$1018 ($add).
Removed top 24 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$add$uart_tx_8n1.v:58$1018 ($add).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$eq$uart_tx_8n1.v:67$1020 ($eq).
Removed top 1 bits (of 8) from mux cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$procmux$1829 ($mux).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$auto$opt_dff.cc:195:make_patterns_logic$3108 ($ne).
Removed top 21 bits (of 23) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3338 ($dffe).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:108$811 ($ne).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:105$817 ($mux).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:123$819 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:116$830 ($ne).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:117$831 ($ne).
Removed top 15 bits (of 32) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:159$843 ($mux).
Removed top 4 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:168$846 ($mux).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:173$847 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:175$850 ($eq).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:176$852 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:195$875 ($eq).
Removed top 10 bits (of 12) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:229$884 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:233$890 ($eq).
Removed top 3 bits (of 12) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:238$898 ($eq).
Removed top 2 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:238$905 ($mux).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:229$906 ($mux).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:260$909 ($ne).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:269$913 ($eq).
Removed top 1 bits (of 7) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:273$918 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$lt$module_decoder_func_32.v:297$928 ($lt).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:313$932 ($ne).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:319$937 ($mux).
Removed top 3 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1866_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1874_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1879_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1880_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1908_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1909_CMP0 ($eq).
Removed top 11 bits (of 25) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1930_CMP1 ($eq).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1929 ($mux).
Removed top 2 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1935 ($pmux).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$1806_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$ne$module_address_valid.v:100$1079 ($ne).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:91$1065 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:78$1058 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:77$1056 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:74$1052 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:73$1051 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$gt$module_address_valid.v:71$1050 ($gt).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:68$1048 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:67$1046 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:66$1044 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:65$1042 ($eq).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:52$1031 ($eq).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:51$1029 ($eq).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:50$1028 ($eq).
Removed top 2 bits (of 14) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:63$1086 ($mux).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$gt$FIFO2.v:21$1377 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1399 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1399 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1400 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1400 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1401 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1401 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1402 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1402 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$2018_CMP0 ($eq).
Removed top 2 bits (of 7) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:759$342 ($mux).
Removed top 2 bits (of 7) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:745$337 ($mux).
Removed top 4 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$314 ($add).
Removed top 29 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$304 ($add).
Removed top 29 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$301 ($add).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$lt$FIFO2.v:20$1376 ($lt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$551 ($add).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$eq$mkalu.v:75$567 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$procmux$2660_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$procmux$2661_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$procmux$2662_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.$procmux$2686_CMP0 ($eq).
Removed top 1 bits (of 38) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:799$455 ($mux).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$gt$FIFO2.v:21$1097 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1120 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1120 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1122 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1122 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2805_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$gt$FIFO2.v:21$1132 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1154 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1154 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1155 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1155 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1156 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1156 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1157 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1157 ($sub).
Removed top 24 bits (of 41) from mux cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$procmux$2549 ($pmux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$procmux$2626_CMP0 ($eq).
Removed top 24 bits (of 37) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3336 ($adffe).
Removed top 24 bits (of 37) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3337 ($adffe).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$gt$FIFO2.v:21$1167 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1189 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1189 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1190 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1190 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1191 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1191 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1192 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1192 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2537_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$gt$FIFO2.v:21$1202 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1224 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1224 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1225 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1225 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1226 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1226 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1227 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1227 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$procmux$2448_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$gt$FIFO2.v:21$1167 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1190 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1190 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1192 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1192 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$procmux$2544_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$gt$FIFO2.v:21$1237 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1259 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1259 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1260 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1260 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1261 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1261 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1262 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1262 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$procmux$2359_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$gt$FIFO2.v:21$1307 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1329 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1329 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1330 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1330 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1331 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1331 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1332 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1332 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$procmux$2181_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$gt$FIFO2.v:21$1272 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1295 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1295 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1297 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1297 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$procmux$2270_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$gt$FIFO2.v:21$1202 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1224 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1224 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1225 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1225 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1226 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1226 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1227 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1227 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2448_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$gt$FIFO2.v:21$1167 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1189 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1189 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1190 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1190 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1191 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1191 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1192 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1192 ($sub).
Removed top 20 bits (of 52) from mux cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2460 ($pmux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2537_CMP0 ($eq).
Removed top 20 bits (of 35) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3328 ($adffe).
Removed top 20 bits (of 35) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3329 ($adffe).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$procmux$2726_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.$procmux$2722_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$procmux$2718_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.$eq$mkeclass.v:1299$250 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$eq$mkeclass.v:1221$229 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$ne$mkeclass.v:1198$224 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$eq$mkeclass.v:1090$207 ($eq).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$lt$FIFO2.v:20$1096 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$lt$FIFO2.v:20$1131 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$lt$FIFO2.v:20$1166 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$lt$FIFO2.v:20$1201 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$lt$FIFO2.v:20$1166 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$lt$FIFO2.v:20$1236 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$lt$FIFO2.v:20$1306 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$lt$FIFO2.v:20$1271 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$lt$FIFO2.v:20$1201 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$lt$FIFO2.v:20$1166 ($lt).
Removed top 1 bits (of 8) from mux cell mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$procmux$1826 ($mux).
Removed top 2 bits (of 7) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:154$841 ($mux).
Removed top 1 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:191$879 ($mux).
Removed top 1 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$878 ($mux).
Removed top 1 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1932 ($mux).
Removed top 2 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:133$839 ($mux).
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1189_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1192_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1224_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1226_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1295_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1329_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1259_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1190_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1224_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1227_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1189_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1191_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1192_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1154_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1155_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1157_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1120_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1399_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1401_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:105$817_Y.
Removed top 1 bits (of 6) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$878_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:229$906_Y.
Removed top 2 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:238$905_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:319$937_Y.
Removed top 1 bits (of 8) from wire mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$0\buf_tx[7:0].
Removed top 24 bits (of 32) from wire mkeclass_axi4.$flatten\uart_bridge.\uart_tx_inst.$add$uart_tx_8n1.v:58$1018_Y.

34.14. Executing PEEPOPT pass (run peephole optimizers).

34.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

34.16. Executing SHARE pass (SAT-based resource sharing).
Found 7 cells in module mkeclass_axi4 that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage2.\alu.$sshr$mkalu.v:44$556 ($sshr):
    Found 1 activation_patterns using ctrl signal { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2658_CMP \cpu.riscv.fifof_2.D_OUT [6] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage2.\alu.$shr$mkalu.v:43$555 ($shr):
    Found 1 activation_patterns using ctrl signal { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2658_CMP \cpu.riscv.fifof_2.D_OUT [6] }.
    Found 2 candidates: $flatten\cpu.$shr$mkeclass.v:1278$242 $flatten\cpu.$shr$mkeclass.v:1274$241
    Analyzing resource sharing with $flatten\cpu.$shr$mkeclass.v:1278$242 ($shr):
      Found 3 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2718_CMP $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ }.
      Forbidden control signals for this pair of cells: { \cpu.riscv.stage1.EN_ma_flush \cpu.riscv.stage1.rg_fabric_request_EN_port1__write $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$2018_CMP $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1991_CMP \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_5_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_2_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_1_connect_ena_data \cpu.riscv.stage1_tx_stage1_control_enq_ena }
      Activation pattern for cell $flatten\cpu.\riscv.\stage2.\alu.$shr$mkalu.v:43$555: { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2658_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 2'10
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$242: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$242: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2718_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$242: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2718_CMP $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ } = 5'11001
      Size of SAT problem: 0 cells, 1093 variables, 2574 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2718_CMP $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ $flatten\cpu.\riscv.\stage2.\alu.$procmux$2658_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 7'1101110
    Analyzing resource sharing with $flatten\cpu.$shr$mkeclass.v:1274$241 ($shr):
      Found 1 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$247_Y }.
      Forbidden control signals for this pair of cells: { \cpu.riscv.stage1.EN_ma_flush \cpu.riscv.stage1.rg_fabric_request_EN_port1__write $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$2018_CMP $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1991_CMP \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_5_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_2_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_1_connect_ena_data \cpu.riscv.stage1_tx_stage1_control_enq_ena }
      Activation pattern for cell $flatten\cpu.\riscv.\stage2.\alu.$shr$mkalu.v:43$555: { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2658_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 2'10
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1274$241: { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$247_Y } = 2'11
      Size of SAT problem: 0 cells, 500 variables, 1164 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$247_Y $flatten\cpu.\riscv.\stage2.\alu.$procmux$2658_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 4'1110
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage2.\alu.$shl$mkalu.v:42$554 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage2.\alu.$procmux$2662_CMP.
    No candidates found.
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:50$1372 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:764$343_Y.
    Found 1 candidates: $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1371
    Analyzing resource sharing with $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1371 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$345_Y.
      Activation pattern for cell $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:50$1372: $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:764$343_Y = 1'0
      Activation pattern for cell $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1371: $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$345_Y = 1'0
      Size of SAT problem: 0 cells, 1659 variables, 4154 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:764$343_Y $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$345_Y } = 2'00
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1371 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$345_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\cpu.$shr$mkeclass.v:1278$242 ($shr):
    Found 3 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2718_CMP $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ }.
    Found 1 candidates: $flatten\cpu.$shr$mkeclass.v:1274$241
    Analyzing resource sharing with $flatten\cpu.$shr$mkeclass.v:1274$241 ($shr):
      Found 1 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$247_Y }.
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$242: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$242: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2718_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$242: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$procmux$2718_CMP $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ } = 5'11001
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1274$241: { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$247_Y } = 2'11
      Size of SAT problem: 0 cells, 1555 variables, 3660 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \cpu.WILL_FIRE_RL_handle_fetch_response \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$243_Y $flatten\cpu.$eq$mkeclass.v:1292$247_Y $flatten\cpu.$procmux$2718_CMP $flatten\cpu.$procmux$2719_CMP \cpu.ff_mem_request.DEQ } = 7'1111011
  Analyzing resource sharing options for $flatten\cpu.$shr$mkeclass.v:1274$241 ($shr):
    Found 1 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$247_Y }.
    No candidates found.

34.17. Executing TECHMAP pass (map to technology primitives).

34.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

34.17.2. Continuing TECHMAP pass.
Using template $paramod$70ab994d9d7a6411c02d086fdaeb40976ec13d82\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$b572544677d963e14c0b065ea224e532734f7bc9\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$f1f291c0f5677c92e44b45479f4634f84921299f\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$95cc903f66ace9a14a4cfd768767dedcebc73225\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~254 debug messages>

34.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~1 debug messages>

34.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 72 unused wires.
<suppressed ~1 debug messages>

34.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mkeclass_axi4:
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1189 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1190 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1191 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1192 ($sub).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1224 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1225 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1226 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1227 ($sub).
  creating $macc model for $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1295 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1297 ($sub).
  creating $macc model for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1329 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1330 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1331 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1332 ($sub).
  creating $macc model for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1259 ($add).
  creating $macc model for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1260 ($add).
  creating $macc model for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1261 ($add).
  creating $macc model for $flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1262 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1190 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1192 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1224 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1225 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1226 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1227 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1189 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1190 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1191 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1192 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1154 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1155 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1156 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1157 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1120 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1122 ($sub).
  creating $macc model for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$301 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$304 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$314 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1399 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1400 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1401 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1402 ($sub).
  creating $macc model for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$551 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$553 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:65$564 ($add).
  creating $macc model for $flatten\uart_bridge.\uart_tx_inst.$add$uart_tx_8n1.v:58$1018 ($add).
  creating $alu model for $macc $flatten\uart_bridge.\uart_tx_inst.$add$uart_tx_8n1.v:58$1018.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:65$564.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$553.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$551.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1402.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1401.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1400.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1399.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$314.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$304.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$301.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1122.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1120.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1157.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1156.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1155.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1154.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1192.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1191.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1190.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1189.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1227.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1226.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1225.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1224.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1192.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1190.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1262.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1261.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1260.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1259.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1332.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1331.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1330.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1329.
  creating $alu model for $macc $flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1297.
  creating $alu model for $macc $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1295.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1227.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1226.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1225.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1224.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1192.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1191.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1190.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1189.
  creating $alu model for $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ge$module_decoder_func_32.v:106$808 ($ge): new $alu
  creating $alu model for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:45$557 ($lt): new $alu
  creating $alu model for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:46$558 ($lt): new $alu
  creating $alu model for $flatten\uart_bridge.\uart_tx_inst.$lt$uart_tx_8n1.v:55$1015 ($lt): new $alu
  creating $alu cell for $flatten\uart_bridge.\uart_tx_inst.$lt$uart_tx_8n1.v:55$1015: $auto$alumacc.cc:485:replace_alu$3402
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:46$558: $auto$alumacc.cc:485:replace_alu$3413
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:45$557: $auto$alumacc.cc:485:replace_alu$3424
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ge$module_decoder_func_32.v:106$808: $auto$alumacc.cc:485:replace_alu$3437
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1189: $auto$alumacc.cc:485:replace_alu$3446
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1190: $auto$alumacc.cc:485:replace_alu$3449
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1191: $auto$alumacc.cc:485:replace_alu$3452
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1192: $auto$alumacc.cc:485:replace_alu$3455
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1224: $auto$alumacc.cc:485:replace_alu$3458
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1225: $auto$alumacc.cc:485:replace_alu$3461
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1226: $auto$alumacc.cc:485:replace_alu$3464
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1227: $auto$alumacc.cc:485:replace_alu$3467
  creating $alu cell for $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1295: $auto$alumacc.cc:485:replace_alu$3470
  creating $alu cell for $flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1297: $auto$alumacc.cc:485:replace_alu$3473
  creating $alu cell for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1329: $auto$alumacc.cc:485:replace_alu$3476
  creating $alu cell for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1330: $auto$alumacc.cc:485:replace_alu$3479
  creating $alu cell for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1331: $auto$alumacc.cc:485:replace_alu$3482
  creating $alu cell for $flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1332: $auto$alumacc.cc:485:replace_alu$3485
  creating $alu cell for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1259: $auto$alumacc.cc:485:replace_alu$3488
  creating $alu cell for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1260: $auto$alumacc.cc:485:replace_alu$3491
  creating $alu cell for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1261: $auto$alumacc.cc:485:replace_alu$3494
  creating $alu cell for $flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1262: $auto$alumacc.cc:485:replace_alu$3497
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1190: $auto$alumacc.cc:485:replace_alu$3500
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1192: $auto$alumacc.cc:485:replace_alu$3503
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1224: $auto$alumacc.cc:485:replace_alu$3506
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1225: $auto$alumacc.cc:485:replace_alu$3509
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1226: $auto$alumacc.cc:485:replace_alu$3512
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1227: $auto$alumacc.cc:485:replace_alu$3515
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1189: $auto$alumacc.cc:485:replace_alu$3518
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1190: $auto$alumacc.cc:485:replace_alu$3521
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1191: $auto$alumacc.cc:485:replace_alu$3524
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1192: $auto$alumacc.cc:485:replace_alu$3527
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1154: $auto$alumacc.cc:485:replace_alu$3530
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1155: $auto$alumacc.cc:485:replace_alu$3533
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1156: $auto$alumacc.cc:485:replace_alu$3536
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1157: $auto$alumacc.cc:485:replace_alu$3539
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1120: $auto$alumacc.cc:485:replace_alu$3542
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1122: $auto$alumacc.cc:485:replace_alu$3545
  creating $alu cell for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$301: $auto$alumacc.cc:485:replace_alu$3548
  creating $alu cell for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$304: $auto$alumacc.cc:485:replace_alu$3551
  creating $alu cell for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$314: $auto$alumacc.cc:485:replace_alu$3554
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1399: $auto$alumacc.cc:485:replace_alu$3557
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1400: $auto$alumacc.cc:485:replace_alu$3560
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1401: $auto$alumacc.cc:485:replace_alu$3563
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1402: $auto$alumacc.cc:485:replace_alu$3566
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$551: $auto$alumacc.cc:485:replace_alu$3569
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$553: $auto$alumacc.cc:485:replace_alu$3572
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:65$564: $auto$alumacc.cc:485:replace_alu$3575
  creating $alu cell for $flatten\uart_bridge.\uart_tx_inst.$add$uart_tx_8n1.v:58$1018: $auto$alumacc.cc:485:replace_alu$3578
  created 49 $alu and 0 $macc cells.

34.21. Executing OPT pass (performing simple optimizations).

34.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~81 debug messages>

34.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.21.6. Executing OPT_DFF pass (perform DFF optimizations).

34.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

34.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.21.9. Rerunning OPT passes. (Maybe there is more to do..)

34.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~81 debug messages>

34.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.21.13. Executing OPT_DFF pass (perform DFF optimizations).

34.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.21.16. Finished OPT passes. (There is nothing left to do.)

34.22. Executing MEMORY pass.

34.22.1. Executing OPT_MEM pass (optimize memories).
mkeclass_axi4.instr_mem.mem: removing const-0 lane 27
Performed a total of 1 transformations.

34.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

34.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing mkeclass_axi4.cpu.riscv.stage1.integer_rf_rf.reg_file write port 0.

34.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

34.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\cpu.riscv.stage1.integer_rf_rf.reg_file'[0] in module `\mkeclass_axi4': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\cpu.riscv.stage1.integer_rf_rf.reg_file'[1] in module `\mkeclass_axi4': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\instr_mem.mem'[0] in module `\mkeclass_axi4': merging output FF to cell.
Checking read port address `\cpu.riscv.stage1.integer_rf_rf.reg_file'[0] in module `\mkeclass_axi4': no address FF found.
Checking read port address `\cpu.riscv.stage1.integer_rf_rf.reg_file'[1] in module `\mkeclass_axi4': no address FF found.

34.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory mkeclass_axi4.cpu.riscv.stage1.integer_rf_rf.reg_file by address:

34.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

34.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

34.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory mkeclass_axi4.cpu.riscv.stage1.integer_rf_rf.reg_file
found attribute 'ram_style = block' on memory mkeclass_axi4.instr_mem.mem, forced mapping to block RAM
mapping memory mkeclass_axi4.instr_mem.mem via $__ICE40_RAM4K_
<suppressed ~67 debug messages>

34.25. Executing TECHMAP pass (map to technology primitives).

34.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

34.25.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

34.25.3. Continuing TECHMAP pass.
Using template $paramod$d1b8b79f69ef0b1dd1304f7e56053c21ad6b7b52\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$9c5ce781ae987cbfb596e33d63f90eb8c7f18e05\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$2b9473ad076a2cdf81c913d6750855d0deba8c81\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$858e07d123740d08452cfeb5b13f78c982175d21\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$a5b7e59d0857e0de4016104ac24335f4b017628d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$e06bc7784fdd330b86d9303ed682c57fafc73278\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$371be27ec682d6276165e45ff1ee2c9e39bef1e6\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$23d3c699b3823a9d0daf57614f29e16e66bc5c0f\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~180 debug messages>

34.26. Executing ICE40_BRAMINIT pass.

34.27. Executing OPT pass (performing simple optimizations).

34.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~336 debug messages>

34.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$3163 ($adffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_fabric_request_D_IN [1:0], Q = \cpu.riscv.stage1.rg_fabric_request [1:0]).
Adding EN signal on $auto$ff.cc:266:slice$3160 ($adffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_pc_D_IN [1:0], Q = \cpu.riscv.stage1.rg_pc [1:0]).
Removing always-active EN on $auto$ff.cc:266:slice$3132 ($sdffe) from module mkeclass_axi4.
Adding SRST signal on $auto$ff.cc:266:slice$3111 ($dffe) from module mkeclass_axi4 (D = $auto$wreduce.cc:461:run$3368 [7:0], Q = \uart_bridge.uart_tx_inst.bits_sent, rval = 8'00000000).
Setting constant 1-bit at position 0 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 1 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 2 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 3 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 5 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 6 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 7 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 8 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 9 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 10 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 11 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 12 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 13 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 14 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 15 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 16 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 17 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 18 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 19 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 20 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 21 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 22 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 23 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 24 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 25 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 26 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 28 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 29 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 30 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 31 on $flatten\instr_mem.$procdff$2988 ($dff) from module mkeclass_axi4.

34.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 25 unused cells and 215 unused wires.
<suppressed ~35 debug messages>

34.27.5. Rerunning OPT passes. (Removed registers in this run.)

34.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~11 debug messages>

34.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\cpu.$procdff$2987 ($adff) from module mkeclass_axi4 (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$3197 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_funct__h342 [4:0], Q = \cpu.riscv.fifof_2.D_OUT [4:0], rval = 5'00001).
Setting constant 0-bit at position 0 on $flatten\cpu.$procdff$2987 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3328 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3329 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$3330 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$3331 ($adffe) from module mkeclass_axi4.

34.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 1 unused cells and 10 unused wires.
<suppressed ~2 debug messages>

34.27.10. Rerunning OPT passes. (Removed registers in this run.)

34.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~5 debug messages>

34.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.27.13. Executing OPT_DFF pass (perform DFF optimizations).

34.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.27.15. Finished fast OPT passes.

34.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \cpu.riscv.stage1.integer_rf_rf.reg_file in module \mkeclass_axi4:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

34.29. Executing OPT pass (performing simple optimizations).

34.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~10 debug messages>

34.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

34.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$2721:
      Old ports: A=4'1111, B=8'00010011, Y=\cpu.write_strobe__h2618
      New ports: A=2'11, B=4'0001, Y=\cpu.write_strobe__h2618 [2:1]
      New connections: { \cpu.write_strobe__h2618 [3] \cpu.write_strobe__h2618 [0] } = { \cpu.write_strobe__h2618 [2] 1'1 }
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$2725:
      Old ports: A=\cpu.riscv.stage2.ff_memory_request.D_OUT [37:6], B={ \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:6] }, Y=\cpu.w_wdata__h3100
      New ports: A=\cpu.riscv.stage2.ff_memory_request.D_OUT [37:14], B={ \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:14] }, Y=\cpu.w_wdata__h3100 [31:8]
      New connections: \cpu.w_wdata__h3100 [7:0] = \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6]
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1251$237:
      Old ports: A={ 2'00 \cpu.ff_inst_request.D_OUT 1'1 }, B={ \cpu.put_inst__h2189 \cpu.ff_inst_request.D_OUT [1:0] \cpu.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y=\cpu.riscv.stage1.ff_memory_response.D_IN
      New ports: A={ 2'00 \cpu.ff_inst_request.D_OUT [31:2] 1'1 }, B={ \cpu.put_inst__h2189 \cpu.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y={ \cpu.riscv.stage1.ff_memory_response.D_IN [34:3] \cpu.riscv.stage1.ff_memory_response.D_IN [0] }
      New connections: \cpu.riscv.stage1.ff_memory_response.D_IN [2:1] = \cpu.ff_inst_request.D_OUT [1:0]
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1255$238:
      Old ports: A={ 33'000000000000000000000000000000000 \cpu.ff_mem_request.D_OUT [0] }, B={ \cpu.put_data__h4677 \cpu.MUX_riscv_memory_response_put_1__VAL_1 [1] \cpu.ff_mem_request.D_OUT [0] }, Y=\cpu.riscv.memory_response_put
      New ports: A=33'000000000000000000000000000000000, B={ \cpu.put_data__h4677 \cpu.MUX_riscv_memory_response_put_1__VAL_1 [1] }, Y=\cpu.riscv.memory_response_put [33:1]
      New connections: \cpu.riscv.memory_response_put [0] = \cpu.ff_mem_request.D_OUT [0]
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1330$256:
      Old ports: A={ \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }, B={ 24'000000000000000000000000 \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }, Y=$flatten\cpu.$ternary$mkeclass.v:1330$256_Y
      New ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7], B=1'0, Y=$flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8]
      New connections: { $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [31:9] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [7:0] } = { $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1337$257:
      Old ports: A={ \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:0] }, B={ 16'0000000000000000 \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:0] }, Y=$flatten\cpu.$ternary$mkeclass.v:1337$257_Y
      New ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15], B=1'0, Y=$flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16]
      New connections: { $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [31:17] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [15:0] } = { $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:0] }
    Consolidated identical input bits for $mux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2460:
      Old ports: A={ \cpu.fetch_xactor_f_rd_addr.mem[0] [31:20] 4'0000 \cpu.fetch_xactor_f_rd_addr.mem[0] [15] 10'0000000000 \cpu.fetch_xactor_f_rd_addr.mem[0] [4] 4'0000 }, B={ \cpu.fetch_xactor_f_rd_addr.mem[1] [31:20] 4'0000 \cpu.fetch_xactor_f_rd_addr.mem[1] [15] 10'0000000000 \cpu.fetch_xactor_f_rd_addr.mem[1] [4] 4'0000 }, Y=\cpu.fetch_xactor_f_rd_addr.D_OUT [31:0]
      New ports: A={ \cpu.fetch_xactor_f_rd_addr.mem[0] [31:20] \cpu.fetch_xactor_f_rd_addr.mem[0] [15] \cpu.fetch_xactor_f_rd_addr.mem[0] [4] }, B={ \cpu.fetch_xactor_f_rd_addr.mem[1] [31:20] \cpu.fetch_xactor_f_rd_addr.mem[1] [15] \cpu.fetch_xactor_f_rd_addr.mem[1] [4] }, Y={ \cpu.fetch_xactor_f_rd_addr.D_OUT [31:20] \cpu.fetch_xactor_f_rd_addr.D_OUT [15] \cpu.fetch_xactor_f_rd_addr.D_OUT [4] }
      New connections: { \cpu.fetch_xactor_f_rd_addr.D_OUT [19:16] \cpu.fetch_xactor_f_rd_addr.D_OUT [14:5] \cpu.fetch_xactor_f_rd_addr.D_OUT [3:0] } = 18'000000000000000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2371:
      Old ports: A={ 2'00 \cpu.fetch_xactor_f_rd_data.mem[0] [36:33] 1'0 \cpu.fetch_xactor_f_rd_data.mem[0] [31:4] 4'0000 }, B={ 2'00 \cpu.fetch_xactor_f_rd_data.mem[1] [36:33] 1'0 \cpu.fetch_xactor_f_rd_data.mem[1] [31:4] 4'0000 }, Y={ \cpu.fetch_xactor_f_rd_data_D_OUT [38:5] \cpu.fetch_xactor_f_rd_data.D_OUT [4:0] }
      New ports: A={ \cpu.fetch_xactor_f_rd_data.mem[0] [36:33] \cpu.fetch_xactor_f_rd_data.mem[0] [31:4] }, B={ \cpu.fetch_xactor_f_rd_data.mem[1] [36:33] \cpu.fetch_xactor_f_rd_data.mem[1] [31:4] }, Y={ \cpu.fetch_xactor_f_rd_data_D_OUT [36:33] \cpu.fetch_xactor_f_rd_data_D_OUT [31:5] \cpu.fetch_xactor_f_rd_data.D_OUT [4] }
      New connections: { \cpu.fetch_xactor_f_rd_data_D_OUT [38:37] \cpu.fetch_xactor_f_rd_data_D_OUT [32] \cpu.fetch_xactor_f_rd_data.D_OUT [3:0] } = 7'0000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2371:
      Old ports: A={ 34'0000000000000000000000000000000000 \cpu.memory_xactor_f_rd_data.mem[0] [4] 4'0000 }, B={ 34'0000000000000000000000000000000000 \cpu.memory_xactor_f_rd_data.mem[1] [4] 4'0000 }, Y={ \cpu.memory_xactor_f_rd_data_D_OUT [38:5] \cpu.memory_xactor_f_rd_data.D_OUT [4:0] }
      New ports: A=\cpu.memory_xactor_f_rd_data.mem[0] [4], B=\cpu.memory_xactor_f_rd_data.mem[1] [4], Y=\cpu.memory_xactor_f_rd_data.D_OUT [4]
      New connections: { \cpu.memory_xactor_f_rd_data_D_OUT [38:5] \cpu.memory_xactor_f_rd_data.D_OUT [3:0] } = 38'00000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2460:
      Old ports: A={ \cpu.memory_xactor_f_wr_addr.mem[0] [51:20] 2'00 \cpu.memory_xactor_f_wr_addr.mem[0] [17] 9'000000000 \cpu.memory_xactor_f_wr_addr.mem[0] [7:6] 1'0 \cpu.memory_xactor_f_wr_addr.mem[0] [4] 4'0000 }, B={ \cpu.memory_xactor_f_wr_addr.mem[1] [51:20] 2'00 \cpu.memory_xactor_f_wr_addr.mem[1] [17] 9'000000000 \cpu.memory_xactor_f_wr_addr.mem[1] [7:6] 1'0 \cpu.memory_xactor_f_wr_addr.mem[1] [4] 4'0000 }, Y=\cpu.memory_xactor_f_wr_addr.D_OUT
      New ports: A={ \cpu.memory_xactor_f_wr_addr.mem[0] [51:20] \cpu.memory_xactor_f_wr_addr.mem[0] [17] \cpu.memory_xactor_f_wr_addr.mem[0] [7:6] \cpu.memory_xactor_f_wr_addr.mem[0] [4] }, B={ \cpu.memory_xactor_f_wr_addr.mem[1] [51:20] \cpu.memory_xactor_f_wr_addr.mem[1] [17] \cpu.memory_xactor_f_wr_addr.mem[1] [7:6] \cpu.memory_xactor_f_wr_addr.mem[1] [4] }, Y={ \cpu.memory_xactor_f_wr_addr.D_OUT [51:20] \cpu.memory_xactor_f_wr_addr.D_OUT [17] \cpu.memory_xactor_f_wr_addr.D_OUT [7:6] \cpu.memory_xactor_f_wr_addr.D_OUT [4] }
      New connections: { \cpu.memory_xactor_f_wr_addr.D_OUT [19:18] \cpu.memory_xactor_f_wr_addr.D_OUT [16:8] \cpu.memory_xactor_f_wr_addr.D_OUT [5] \cpu.memory_xactor_f_wr_addr.D_OUT [3:0] } = 16'0000000000000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2549:
      Old ports: A={ \cpu.memory_xactor_f_wr_data.mem[0] [16:5] 4'0000 \cpu.memory_xactor_f_wr_data.mem[0] [0] }, B={ \cpu.memory_xactor_f_wr_data.mem[1] [16:5] 4'0000 \cpu.memory_xactor_f_wr_data.mem[1] [0] }, Y=\cpu.memory_xactor_f_wr_data.D_OUT [16:0]
      New ports: A={ \cpu.memory_xactor_f_wr_data.mem[0] [16:5] \cpu.memory_xactor_f_wr_data.mem[0] [0] }, B={ \cpu.memory_xactor_f_wr_data.mem[1] [16:5] \cpu.memory_xactor_f_wr_data.mem[1] [0] }, Y={ \cpu.memory_xactor_f_wr_data.D_OUT [16:5] \cpu.memory_xactor_f_wr_data.D_OUT [0] }
      New connections: \cpu.memory_xactor_f_wr_data.D_OUT [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:649$309:
      Old ports: A={ \cpu.riscv.stage1.ma_flush_newpc [31:2] 2'00 }, B=4096, Y=\cpu.riscv.stage1.rg_fabric_request_port1__write_1
      New ports: A=\cpu.riscv.stage1.ma_flush_newpc [31:2], B=30'000000000000000000010000000000, Y=\cpu.riscv.stage1.rg_fabric_request_port1__write_1 [31:2]
      New connections: \cpu.riscv.stage1.rg_fabric_request_port1__write_1 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1926:
      Old ports: A=3'110, B=3'001, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2
      New ports: A=2'10, B=2'01, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [2] = \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1932:
      Old ports: A=5'00010, B={ 1'0 \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0] }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [4:0]
      New ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0], Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1935:
      Old ports: A=4'0010, B=8'10xx0011, Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3:0]
      New ports: A=3'010, B=6'1xx011, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:103$818:
      Old ports: A={ 1'1 $auto$wreduce.cc:461:run$3362 [1:0] }, B=3'110, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136
      New ports: A=$auto$wreduce.cc:461:run$3362 [1:0], B=2'10, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136 [2] = 1'1
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:131$837:
      Old ports: A=4'0101, B=4'1011, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211
      New ports: A=2'10, B=2'01, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [2:1]
      New connections: { \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [3] \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [0] } = { \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:159$843:
      Old ports: A={ \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [4:0] \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [11] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [0] }, B={ \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [19:15] \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [11] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [0] }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [16:0]
      New ports: A=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [4:0], B=\cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [19:15], Y=\cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [16:12]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [11:0] = { \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [11] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [0] }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$912:
      Old ports: A=3'110, B=3'001, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$912_Y
      New ports: A=2'10, B=2'01, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$912_Y [1:0]
      New connections: $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$912_Y [2] = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$912_Y [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921:
      Old ports: A=3'110, B=3'000, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921_Y
      New ports: A=1'1, B=1'0, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921_Y [1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921_Y [2] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$929:
      Old ports: A=3'110, B=3'001, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$929_Y
      New ports: A=2'10, B=2'01, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$929_Y [1:0]
      New connections: $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$929_Y [2] = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$929_Y [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930:
      Old ports: A=3'110, B=3'000, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930_Y
      New ports: A=1'1, B=1'0, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930_Y [1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930_Y [2] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$935:
      Old ports: A=3'110, B=3'010, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$935_Y
      New ports: A=1'1, B=1'0, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$935_Y [2]
      New connections: $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$935_Y [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:319$937:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:461:run$3366 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$3366 [1]
      New connections: $auto$wreduce.cc:461:run$3366 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$945:
      Old ports: A=4'0000, B=4'1010, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$945_Y
      New ports: A=1'0, B=1'1, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$945_Y [1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$945_Y [3:2] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$945_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$945_Y [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$947:
      Old ports: A={ 3'001 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [12] }, B={ 2'11 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [13:12] }, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$947_Y
      New ports: A=2'01, B={ 1'1 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [13] }, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$947_Y [2:1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$947_Y [3] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$947_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$947_Y [2] \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [12] }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:710$420:
      Old ports: A=33'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1, B={ \cpu.riscv.fifof_3.D_OUT [37:6] 1'1 }, Y=\cpu.riscv.stage3.wr_flush_wget
      New ports: A=32'x, B=\cpu.riscv.fifof_3.D_OUT [37:6], Y=\cpu.riscv.stage3.wr_flush_wget [32:1]
      New connections: \cpu.riscv.stage3.wr_flush_wget [0] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$2717:
      Old ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164, B={ $flatten\cpu.$ternary$mkeclass.v:1330$256_Y $flatten\cpu.$ternary$mkeclass.v:1337$257_Y }, Y=\cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3
      New ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [31:8], B={ $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$256_Y [8] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$257_Y [16] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:8] }, Y=\cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [31:8]
      New connections: \cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [7:0] = \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:653$310:
      Old ports: A={ \cpu.riscv.stage1.rg_fabric_request_port0__write_1 [31:2] 2'x }, B=\cpu.riscv.stage1.rg_fabric_request_port1__write_1, Y=\cpu.riscv.stage1.rg_fabric_request_D_IN
      New ports: A={ \cpu.riscv.stage1.rg_fabric_request_port0__write_1 [31:2] 1'x }, B={ \cpu.riscv.stage1.rg_fabric_request_port1__write_1 [31:2] 1'0 }, Y={ \cpu.riscv.stage1.rg_fabric_request_D_IN [31:2] \cpu.riscv.stage1.rg_fabric_request_D_IN [0] }
      New connections: \cpu.riscv.stage1.rg_fabric_request_D_IN [1] = \cpu.riscv.stage1.rg_fabric_request_D_IN [0]
    Consolidated identical input bits for $pmux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1912:
      Old ports: A=3'110, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$929_Y $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930_Y 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5
      New ports: A=2'10, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$929_Y [1:0] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$930_Y [1] 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [2] = \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [1]
    Consolidated identical input bits for $pmux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1920:
      Old ports: A=3'110, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$912_Y \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921_Y 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3
      New ports: A=2'10, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$912_Y [1:0] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1:0] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$921_Y [1] 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [2] = \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:133$839:
      Old ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3:0], Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0]
      New ports: A=3'010, B={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [1:0] }, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$878:
      Old ports: A=5'00010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [4:0], Y=$auto$wreduce.cc:461:run$3363 [4:0]
      New ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0], Y=$auto$wreduce.cc:461:run$3363 [3:0]
      New connections: $auto$wreduce.cc:461:run$3363 [4] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1932:
      Old ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0], Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0]
      New ports: A=3'010, B={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [1:0] }, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:191$879:
      Old ports: A=$auto$wreduce.cc:461:run$3363 [4:0], B=5'00010, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [4:0]
      New ports: A=$auto$wreduce.cc:461:run$3363 [3:0], B=4'0010, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [3:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [4] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$878:
      Old ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0], Y=$auto$wreduce.cc:461:run$3363 [3:0]
      New ports: A=3'010, B={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [1:0] }, Y={ $auto$wreduce.cc:461:run$3363 [3] $auto$wreduce.cc:461:run$3363 [1:0] }
      New connections: $auto$wreduce.cc:461:run$3363 [2] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:191$879:
      Old ports: A=$auto$wreduce.cc:461:run$3363 [3:0], B=4'0010, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [3:0]
      New ports: A={ $auto$wreduce.cc:461:run$3363 [3] $auto$wreduce.cc:461:run$3363 [1:0] }, B=3'010, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [3] \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [2] = 1'0
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 37 changes.

34.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

34.29.6. Executing OPT_DFF pass (perform DFF optimizations).

34.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 13 unused cells and 116 unused wires.
<suppressed ~16 debug messages>

34.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~10 debug messages>

34.29.9. Rerunning OPT passes. (Maybe there is more to do..)

34.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

34.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1255$238:
      Old ports: A=33'000000000000000000000000000000000, B={ \cpu.put_data__h4677 \cpu.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y=\cpu.riscv.memory_response_put [33:1]
      New ports: A=0, B={ \cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [31:8] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }, Y=\cpu.riscv.memory_response_put [33:2]
      New connections: \cpu.riscv.memory_response_put [1] = 1'0
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 1 changes.

34.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[9]$3838 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[9]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[8]$3836 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[8]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[7]$3834 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[7]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[6]$3832 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[6]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[5]$3830 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[5]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[4]$3828 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[4]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[3]$3826 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[3]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[31]$3882 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[31]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[30]$3880 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[30]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[2]$3824 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[2]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[29]$3878 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[29]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[28]$3876 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[28]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[27]$3874 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[27]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[26]$3872 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[26]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[25]$3870 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[25]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[24]$3868 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[24]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[23]$3866 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[23]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[22]$3864 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[22]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[21]$3862 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[21]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[20]$3860 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[20]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[1]$3822 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[1]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[19]$3858 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[19]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[18]$3856 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[18]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[17]$3854 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[17]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[16]$3852 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[16]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[15]$3850 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[15]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[14]$3848 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[14]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[13]$3846 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[13]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[12]$3844 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[12]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[11]$3842 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[11]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[10]$3840 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[10]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[0]$3820 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[0]).
Adding SRST signal on $auto$ff.cc:266:slice$3815 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [30:25], Q = \cpu.riscv.fifof_2.D_OUT [17:12], rval = 6'000000).
Adding SRST signal on $auto$ff.cc:266:slice$3814 ($sdffce) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221 [1] \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [14] }, Q = { \cpu.riscv.fifof_2.D_OUT [4] \cpu.riscv.fifof_2.D_OUT [2] }, rval = 2'00).

34.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

34.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~5 debug messages>

34.29.16. Rerunning OPT passes. (Maybe there is more to do..)

34.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~66 debug messages>

34.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

34.29.20. Executing OPT_DFF pass (perform DFF optimizations).

34.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

34.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.29.23. Rerunning OPT passes. (Maybe there is more to do..)

34.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~66 debug messages>

34.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

34.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.29.27. Executing OPT_DFF pass (perform DFF optimizations).

34.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.29.30. Finished OPT passes. (There is nothing left to do.)

34.30. Executing ICE40_WRAPCARRY pass (wrap carries).

34.31. Executing TECHMAP pass (map to technology primitives).

34.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

34.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

34.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$068ad458e7761d78e5eed8238508872e7b0aef95\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$e765c459d3029c22a22a27989e94858fd9ebfa9c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$49f1dc3dcd6d2c748486fe94c6744a34a19bbafe\_90_pmux for cells of type $pmux.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 1 of port A: 1'0
  Constant input on bit 2 of port A: 1'0
  Constant input on bit 3 of port A: 1'0
  Constant input on bit 4 of port A: 1'0
  Constant input on bit 5 of port A: 1'0
  Constant input on bit 6 of port A: 1'0
  Constant input on bit 7 of port A: 1'0
  Constant input on bit 8 of port A: 1'0
  Constant input on bit 9 of port A: 1'0
  Constant input on bit 10 of port A: 1'0
  Constant input on bit 11 of port A: 1'0
  Constant input on bit 12 of port A: 1'0
  Constant input on bit 13 of port A: 1'0
  Constant input on bit 14 of port A: 1'0
  Constant input on bit 15 of port A: 1'0
  Constant input on bit 16 of port A: 1'0
  Constant input on bit 17 of port A: 1'0
  Constant input on bit 18 of port A: 1'0
  Constant input on bit 19 of port A: 1'0
  Constant input on bit 20 of port A: 1'0
  Constant input on bit 21 of port A: 1'0
  Constant input on bit 22 of port A: 1'0
  Constant input on bit 23 of port A: 1'0
  Constant input on bit 24 of port A: 1'0
  Constant input on bit 25 of port A: 1'0
  Constant input on bit 26 of port A: 1'0
  Constant input on bit 27 of port A: 1'0
  Constant input on bit 28 of port A: 1'0
  Constant input on bit 29 of port A: 1'0
  Constant input on bit 30 of port A: 1'0
  Constant input on bit 31 of port A: 1'0
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 2 of port B: 1'0
Creating constmapped module `$paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr'.

34.31.68. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~2552 debug messages>

34.31.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~480 debug messages>
Removed 0 unused cells and 19 unused wires.
Using template $paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:6e3026a439ed4a6e7983ca0e910890cc59b2f7b2$paramod$7b0bb309dce042ecaf2e0bfa495da988fc49fdf1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 27 of port A: 1'0
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 2 of port B: 1'0
Creating constmapped module `$paramod$constmap:5a2094b73014efa34625a63492b6321a1426d942$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr'.

34.31.75. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:5a2094b73014efa34625a63492b6321a1426d942$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

34.31.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:5a2094b73014efa34625a63492b6321a1426d942$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~418 debug messages>
Removed 0 unused cells and 18 unused wires.
Using template $paramod$constmap:5a2094b73014efa34625a63492b6321a1426d942$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~935 debug messages>

34.32. Executing OPT pass (performing simple optimizations).

34.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~2074 debug messages>

34.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~11559 debug messages>
Removed a total of 3853 cells.

34.32.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12123 ($_DFF_PP0_) from module mkeclass_axi4.

34.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 595 unused cells and 2540 unused wires.
<suppressed ~601 debug messages>

34.32.5. Rerunning OPT passes. (Removed registers in this run.)

34.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~18 debug messages>

34.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.32.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$6794 ($_SDFFCE_PP0P_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1872.Y_B [3], Q = \cpu.riscv.fifof_2.D_OUT [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6726 ($_DFFE_PP_) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf_D_OUT_2 [30], Q = \cpu.riscv.fifof.D_OUT [62], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6694 ($_DFFE_PP_) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf_D_OUT_1 [30], Q = \cpu.riscv.fifof.D_OUT [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13878 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1868.B_AND_S [1], Q = \cpu.riscv.fifof_2.D_OUT [45], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13877 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1868.B_AND_S [2], Q = \cpu.riscv.fifof_2.D_OUT [44], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13873 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1864.B_AND_S [3], Q = \cpu.riscv.fifof_2.D_OUT [40], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13872 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1864.Y_B [0], Q = \cpu.riscv.fifof_2.D_OUT [39], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11696 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11892 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12254 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$13223 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$13771 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4896 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4940 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4979 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5021 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5093 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5221 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5697 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5753 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5989 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6268 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6334 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6367 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6400 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6464 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6502 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6549 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6758 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6790 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6825 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6965 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6997 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8552 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8662 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8694 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8892 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8924 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$9387 ($_DFFE_PP_) from module mkeclass_axi4.

34.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 7 unused cells and 2 unused wires.
<suppressed ~9 debug messages>

34.32.10. Rerunning OPT passes. (Removed registers in this run.)

34.32.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~62 debug messages>

34.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$16950 ($_SDFFCE_PN0P_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$16951 ($_SDFFCE_PN0P_) from module mkeclass_axi4.

34.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.32.15. Rerunning OPT passes. (Removed registers in this run.)

34.32.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~2 debug messages>

34.32.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.32.18. Executing OPT_DFF pass (perform DFF optimizations).

34.32.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.32.20. Finished fast OPT passes.

34.33. Executing ICE40_OPT pass (performing simple optimizations).

34.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3402.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3402.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3548.slice[0].carry: CO=\cpu.riscv.stage1.rg_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3551.slice[0].carry: CO=\cpu.riscv.stage1.rg_fabric_request [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3554.slice[0].carry: CO=\cpu.riscv.stage1.rg_index [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3569.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3569.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3578.slice[0].carry: CO=\uart_bridge.uart_tx_inst.bits_sent [0]

34.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~341 debug messages>

34.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5952 ($_DFFE_PP0P_) from module mkeclass_axi4.

34.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 2 unused cells and 1 unused wires.
<suppressed ~3 debug messages>

34.33.6. Rerunning OPT passes. (Removed registers in this run.)

34.33.7. Running ICE40 specific optimizations.

34.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.33.10. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12970 ($_DFFE_PN0P_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$13244 ($_DFFE_PN0P_) from module mkeclass_axi4.

34.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.33.12. Rerunning OPT passes. (Removed registers in this run.)

34.33.13. Running ICE40 specific optimizations.

34.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~63 debug messages>

34.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.33.16. Executing OPT_DFF pass (perform DFF optimizations).

34.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

34.33.18. Rerunning OPT passes. (Removed registers in this run.)

34.33.19. Running ICE40 specific optimizations.

34.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.33.22. Executing OPT_DFF pass (perform DFF optimizations).

34.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.33.24. Finished OPT passes. (There is nothing left to do.)

34.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

34.35. Executing TECHMAP pass (map to technology primitives).

34.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

34.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~691 debug messages>

34.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3548.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3551.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3554.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3569.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3578.slice[0].carry ($lut).

34.38. Executing ICE40_OPT pass (performing simple optimizations).

34.38.1. Running ICE40 specific optimizations.

34.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~191 debug messages>

34.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~1107 debug messages>
Removed a total of 369 cells.

34.38.4. Executing OPT_DFF pass (perform DFF optimizations).

34.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 4189 unused wires.
<suppressed ~1 debug messages>

34.38.6. Rerunning OPT passes. (Removed registers in this run.)

34.38.7. Running ICE40 specific optimizations.

34.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

34.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

34.38.10. Executing OPT_DFF pass (perform DFF optimizations).

34.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

34.38.12. Finished OPT passes. (There is nothing left to do.)

34.39. Executing TECHMAP pass (map to technology primitives).

34.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

34.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

34.40. Executing ABC pass (technology mapping using ABC).

34.40.1. Extracting gate netlist of module `\mkeclass_axi4' to `<abc-temp-dir>/input.blif'..
Extracted 2817 gates and 3538 wires to a netlist network with 719 inputs and 526 outputs.

34.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     819.
ABC: Participating nodes from both networks       =    2006.
ABC: Participating nodes from the first network   =     904. (  75.02 % of nodes)
ABC: Participating nodes from the second network  =    1102. (  91.45 % of nodes)
ABC: Node pairs (any polarity)                    =     904. (  75.02 % of names can be moved)
ABC: Node pairs (same polarity)                   =     683. (  56.68 % of names can be moved)
ABC: Total runtime =     0.07 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

34.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1204
ABC RESULTS:        internal signals:     2293
ABC RESULTS:           input signals:      719
ABC RESULTS:          output signals:      526
Removing temp directory.

34.41. Executing ICE40_WRAPCARRY pass (wrap carries).

34.42. Executing TECHMAP pass (map to technology primitives).

34.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

34.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 85 unused cells and 2375 unused wires.

34.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1346
  1-LUT              114
  2-LUT              236
  3-LUT              580
  4-LUT              416
  with \SB_CARRY    (#0)  156
  with \SB_CARRY    (#1)  157

Eliminating LUTs.
Number of LUTs:     1346
  1-LUT              114
  2-LUT              236
  3-LUT              580
  4-LUT              416
  with \SB_CARRY    (#0)  156
  with \SB_CARRY    (#1)  157

Combining LUTs.
Number of LUTs:     1328
  1-LUT              114
  2-LUT              234
  3-LUT              547
  4-LUT              433
  with \SB_CARRY    (#0)  156
  with \SB_CARRY    (#1)  157

Eliminated 0 LUTs.
Combined 18 LUTs.
<suppressed ~7454 debug messages>

34.44. Executing TECHMAP pass (map to technology primitives).

34.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

34.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000111 for cells of type $lut.
Using template $paramod$62b9cc19760df4f05d0c7360b790a1fb852ac400\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$b82dd4a20dbf0d54061c2335089cd4250464eb8a\$lut for cells of type $lut.
Using template $paramod$6047691d8bbb6cff4c2e5680ed3445ca5625ef2f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$1a64f21ea15b05b7fc930804a66f6689ebbd6394\$lut for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$349b4548230399426bbcb0c9004ac92941aa8238\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$044e8b1893c94f717651c5cd428e71c892566f52\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$d7f4570f04f68175b1fa25c1bac92938027a2c96\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$a20b0c093af372402eecf32644de5f0208303079\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$fceb3a526de44b8f6b38e567360f59f7cf5878fb\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$a154b4848eceeec98f3abab7a40710398d86442e\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$f6914128303d972b041d4a54c9600a49a5f3fcb0\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$05a06b440086861ff6c9f3273ddb0e30888ed80d\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$c9994e2a733aa21e4bfe57075af37a9c5257c791\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$6e87a29d18a99caa1dd7167449fef31e04ce86bc\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$303e10007aa2452bdb64567037c926ead530af83\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$d567bba3e8ea5142deb2586d5045a7f7828e2b2a\$lut for cells of type $lut.
Using template $paramod$ad0f7232ba560091d7782131d084926140df2f1f\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$2bf9bace5f073aec38261a215c1d9db686ca8f22\$lut for cells of type $lut.
Using template $paramod$38a207c707820f72f67386d2619ee46ee88964f9\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$4a51864395fae58ba30115ac09ca86f922da2001\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$41f9218b0723152e7031c7ddd00a24f36e0296ca\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$2703356930112cf5ec44d1fc81b6b237e911c8bb\$lut for cells of type $lut.
Using template $paramod$b4c86683de329b1d5e65e43bb5a60d929bddd3da\$lut for cells of type $lut.
Using template $paramod$a55f1cd7dd899e453fe61d7ec95053334d858d41\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$5ab8703b1aa62946296547e85dc0a19366704a74\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$ab2e45f7a350a5d7d54d88d8019d5256ae32568f\$lut for cells of type $lut.
Using template $paramod$ef6f9494c41321ef63579b1462fd44bdf781fd1c\$lut for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$98d40e23bb57d56e14345fb0942003de3e361f25\$lut for cells of type $lut.
Using template $paramod$2bdfdda73873e8931790d872b72220895e67fee5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011110 for cells of type $lut.
No more expansions possible.
<suppressed ~3346 debug messages>
Removed 0 unused cells and 2966 unused wires.

34.45. Executing AUTONAME pass.
Renamed 52230 objects in module mkeclass_axi4 (101 iterations).
<suppressed ~2759 debug messages>

34.46. Executing HIERARCHY pass (managing design hierarchy).

34.46.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4

34.46.2. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Removed 0 unused modules.

34.47. Printing statistics.

=== mkeclass_axi4 ===

   Number of wires:               1539
   Number of wire bits:          14600
   Number of public wires:        1539
   Number of public wire bits:   14600
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2230
     SB_CARRY                      226
     SB_DFF                          4
     SB_DFFE                       192
     SB_DFFER                      406
     SB_DFFES                        1
     SB_DFFESR                      50
     SB_DFFESS                       2
     SB_DFFR                         2
     SB_DFFS                         1
     SB_DFFSR                        9
     SB_HFOSC                        1
     SB_LUT4                      1328
     SB_RAM40_4K                     8

34.48. Executing CHECK pass (checking for obvious problems).
Checking module mkeclass_axi4...
Found and reported 0 problems.

34.49. Executing JSON backend.

Warnings: 175 unique messages, 193 total
End of script. Logfile hash: 1a162a846d, CPU: user 7.22s system 0.02s, MEM: 68.78 MB peak
Yosys 0.33 (git sha1 2584903a060)
Time spent: 27% 7x techmap (2 sec), 18% 49x opt_expr (1 sec), ...
